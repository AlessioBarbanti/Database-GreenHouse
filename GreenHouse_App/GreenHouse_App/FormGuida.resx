<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="RevisioniInScadenza.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>