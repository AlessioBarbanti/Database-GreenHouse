#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Il codice è stato generato da uno strumento.
//     Versione runtime:4.0.30319.42000
//
//     Le modifiche apportate a questo file possono provocare un comportamento non corretto e andranno perse se
//     il codice viene rigenerato.
// </auto-generated>
//------------------------------------------------------------------------------

namespace GreenHouse_App
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="GreenhouseDB")]
	public partial class ProvaGreenHouseDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definizioni metodo Extensibility
    partial void OnCreated();
    partial void InsertACCESSI_INVENTARIO(ACCESSI_INVENTARIO instance);
    partial void UpdateACCESSI_INVENTARIO(ACCESSI_INVENTARIO instance);
    partial void DeleteACCESSI_INVENTARIO(ACCESSI_INVENTARIO instance);
    partial void InsertANNOTAZIONI(ANNOTAZIONI instance);
    partial void UpdateANNOTAZIONI(ANNOTAZIONI instance);
    partial void DeleteANNOTAZIONI(ANNOTAZIONI instance);
    partial void InsertCLIMI(CLIMI instance);
    partial void UpdateCLIMI(CLIMI instance);
    partial void DeleteCLIMI(CLIMI instance);
    partial void InsertCLUSTER(CLUSTER instance);
    partial void UpdateCLUSTER(CLUSTER instance);
    partial void DeleteCLUSTER(CLUSTER instance);
    partial void InsertCLUSTER_EMBRIONI(CLUSTER_EMBRIONI instance);
    partial void UpdateCLUSTER_EMBRIONI(CLUSTER_EMBRIONI instance);
    partial void DeleteCLUSTER_EMBRIONI(CLUSTER_EMBRIONI instance);
    partial void InsertCLUSTER_PIANTE(CLUSTER_PIANTE instance);
    partial void UpdateCLUSTER_PIANTE(CLUSTER_PIANTE instance);
    partial void DeleteCLUSTER_PIANTE(CLUSTER_PIANTE instance);
    partial void InsertCOLLABORAZIONI(COLLABORAZIONI instance);
    partial void UpdateCOLLABORAZIONI(COLLABORAZIONI instance);
    partial void DeleteCOLLABORAZIONI(COLLABORAZIONI instance);
    partial void InsertCONTRATTI(CONTRATTI instance);
    partial void UpdateCONTRATTI(CONTRATTI instance);
    partial void DeleteCONTRATTI(CONTRATTI instance);
    partial void InsertDIPENDENTI(DIPENDENTI instance);
    partial void UpdateDIPENDENTI(DIPENDENTI instance);
    partial void DeleteDIPENDENTI(DIPENDENTI instance);
    partial void InsertESPERIMENTI(ESPERIMENTI instance);
    partial void UpdateESPERIMENTI(ESPERIMENTI instance);
    partial void DeleteESPERIMENTI(ESPERIMENTI instance);
    partial void InsertGARAGE(GARAGE instance);
    partial void UpdateGARAGE(GARAGE instance);
    partial void DeleteGARAGE(GARAGE instance);
    partial void InsertIRRIGAZIONI(IRRIGAZIONI instance);
    partial void UpdateIRRIGAZIONI(IRRIGAZIONI instance);
    partial void DeleteIRRIGAZIONI(IRRIGAZIONI instance);
    partial void InsertLAVORI(LAVORI instance);
    partial void UpdateLAVORI(LAVORI instance);
    partial void DeleteLAVORI(LAVORI instance);
    partial void InsertLAVORI_EFFETTUATI(LAVORI_EFFETTUATI instance);
    partial void UpdateLAVORI_EFFETTUATI(LAVORI_EFFETTUATI instance);
    partial void DeleteLAVORI_EFFETTUATI(LAVORI_EFFETTUATI instance);
    partial void InsertMACCHINARI(MACCHINARI instance);
    partial void UpdateMACCHINARI(MACCHINARI instance);
    partial void DeleteMACCHINARI(MACCHINARI instance);
    partial void InsertMACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI instance);
    partial void UpdateMACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI instance);
    partial void DeleteMACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI instance);
    partial void InsertMAGAZZINI(MAGAZZINI instance);
    partial void UpdateMAGAZZINI(MAGAZZINI instance);
    partial void DeleteMAGAZZINI(MAGAZZINI instance);
    partial void InsertMANUTENZIONI(MANUTENZIONI instance);
    partial void UpdateMANUTENZIONI(MANUTENZIONI instance);
    partial void DeleteMANUTENZIONI(MANUTENZIONI instance);
    partial void InsertPERMESSI(PERMESSI instance);
    partial void UpdatePERMESSI(PERMESSI instance);
    partial void DeletePERMESSI(PERMESSI instance);
    partial void InsertPERMESSI_MACCHINARI(PERMESSI_MACCHINARI instance);
    partial void UpdatePERMESSI_MACCHINARI(PERMESSI_MACCHINARI instance);
    partial void DeletePERMESSI_MACCHINARI(PERMESSI_MACCHINARI instance);
    partial void InsertPERMESSI_MANOVALI(PERMESSI_MANOVALI instance);
    partial void UpdatePERMESSI_MANOVALI(PERMESSI_MANOVALI instance);
    partial void DeletePERMESSI_MANOVALI(PERMESSI_MANOVALI instance);
    partial void InsertPERMESSI_STRUMENTI_COMPLESSI(PERMESSI_STRUMENTI_COMPLESSI instance);
    partial void UpdatePERMESSI_STRUMENTI_COMPLESSI(PERMESSI_STRUMENTI_COMPLESSI instance);
    partial void DeletePERMESSI_STRUMENTI_COMPLESSI(PERMESSI_STRUMENTI_COMPLESSI instance);
    partial void InsertPIANTE(PIANTE instance);
    partial void UpdatePIANTE(PIANTE instance);
    partial void DeletePIANTE(PIANTE instance);
    partial void InsertPRODOTTI(PRODOTTI instance);
    partial void UpdatePRODOTTI(PRODOTTI instance);
    partial void DeletePRODOTTI(PRODOTTI instance);
    partial void InsertRICERCATORI(RICERCATORI instance);
    partial void UpdateRICERCATORI(RICERCATORI instance);
    partial void DeleteRICERCATORI(RICERCATORI instance);
    partial void InsertSERRE(SERRE instance);
    partial void UpdateSERRE(SERRE instance);
    partial void DeleteSERRE(SERRE instance);
    partial void InsertSERRE_INCUBAZIONE(SERRE_INCUBAZIONE instance);
    partial void UpdateSERRE_INCUBAZIONE(SERRE_INCUBAZIONE instance);
    partial void DeleteSERRE_INCUBAZIONE(SERRE_INCUBAZIONE instance);
    partial void InsertSTRUMENTI_COMPLESSI(STRUMENTI_COMPLESSI instance);
    partial void UpdateSTRUMENTI_COMPLESSI(STRUMENTI_COMPLESSI instance);
    partial void DeleteSTRUMENTI_COMPLESSI(STRUMENTI_COMPLESSI instance);
    partial void InsertSTRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI instance);
    partial void UpdateSTRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI instance);
    partial void DeleteSTRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI instance);
    partial void InsertSTRUTTURE(STRUTTURE instance);
    partial void UpdateSTRUTTURE(STRUTTURE instance);
    partial void DeleteSTRUTTURE(STRUTTURE instance);
    partial void InsertSUPERVISIONI(SUPERVISIONI instance);
    partial void UpdateSUPERVISIONI(SUPERVISIONI instance);
    partial void DeleteSUPERVISIONI(SUPERVISIONI instance);
    partial void InsertUNIVERSITÀ(UNIVERSITÀ instance);
    partial void UpdateUNIVERSITÀ(UNIVERSITÀ instance);
    partial void DeleteUNIVERSITÀ(UNIVERSITÀ instance);
    partial void InsertUTENSILI(UTENSILI instance);
    partial void UpdateUTENSILI(UTENSILI instance);
    partial void DeleteUTENSILI(UTENSILI instance);
    partial void InsertVIAGGI_ISTRUZIONE(VIAGGI_ISTRUZIONE instance);
    partial void UpdateVIAGGI_ISTRUZIONE(VIAGGI_ISTRUZIONE instance);
    partial void DeleteVIAGGI_ISTRUZIONE(VIAGGI_ISTRUZIONE instance);
    partial void InsertVISITE(VISITE instance);
    partial void UpdateVISITE(VISITE instance);
    partial void DeleteVISITE(VISITE instance);
    #endregion
		
		public ProvaGreenHouseDataContext() : 
				base(global::GreenHouse_App.Properties.Settings.Default.GreenhouseDBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public ProvaGreenHouseDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProvaGreenHouseDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProvaGreenHouseDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public ProvaGreenHouseDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<ACCESSI_INVENTARIO> ACCESSI_INVENTARIO
		{
			get
			{
				return this.GetTable<ACCESSI_INVENTARIO>();
			}
		}
		
		public System.Data.Linq.Table<ANNOTAZIONI> ANNOTAZIONI
		{
			get
			{
				return this.GetTable<ANNOTAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<CLIMI> CLIMI
		{
			get
			{
				return this.GetTable<CLIMI>();
			}
		}
		
		public System.Data.Linq.Table<CLUSTER> CLUSTER
		{
			get
			{
				return this.GetTable<CLUSTER>();
			}
		}
		
		public System.Data.Linq.Table<CLUSTER_EMBRIONI> CLUSTER_EMBRIONI
		{
			get
			{
				return this.GetTable<CLUSTER_EMBRIONI>();
			}
		}
		
		public System.Data.Linq.Table<CLUSTER_PIANTE> CLUSTER_PIANTE
		{
			get
			{
				return this.GetTable<CLUSTER_PIANTE>();
			}
		}
		
		public System.Data.Linq.Table<COLLABORAZIONI> COLLABORAZIONI
		{
			get
			{
				return this.GetTable<COLLABORAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<CONTRATTI> CONTRATTI
		{
			get
			{
				return this.GetTable<CONTRATTI>();
			}
		}
		
		public System.Data.Linq.Table<DIPENDENTI> DIPENDENTI
		{
			get
			{
				return this.GetTable<DIPENDENTI>();
			}
		}
		
		public System.Data.Linq.Table<ESPERIMENTI> ESPERIMENTI
		{
			get
			{
				return this.GetTable<ESPERIMENTI>();
			}
		}
		
		public System.Data.Linq.Table<GARAGE> GARAGE
		{
			get
			{
				return this.GetTable<GARAGE>();
			}
		}
		
		public System.Data.Linq.Table<IRRIGAZIONI> IRRIGAZIONI
		{
			get
			{
				return this.GetTable<IRRIGAZIONI>();
			}
		}
		
		public System.Data.Linq.Table<LAVORI> LAVORI
		{
			get
			{
				return this.GetTable<LAVORI>();
			}
		}
		
		public System.Data.Linq.Table<LAVORI_EFFETTUATI> LAVORI_EFFETTUATI
		{
			get
			{
				return this.GetTable<LAVORI_EFFETTUATI>();
			}
		}
		
		public System.Data.Linq.Table<MACCHINARI> MACCHINARI
		{
			get
			{
				return this.GetTable<MACCHINARI>();
			}
		}
		
		public System.Data.Linq.Table<MACCHINARI_UTILIZZATI> MACCHINARI_UTILIZZATI
		{
			get
			{
				return this.GetTable<MACCHINARI_UTILIZZATI>();
			}
		}
		
		public System.Data.Linq.Table<MAGAZZINI> MAGAZZINI
		{
			get
			{
				return this.GetTable<MAGAZZINI>();
			}
		}
		
		public System.Data.Linq.Table<MANUTENZIONI> MANUTENZIONI
		{
			get
			{
				return this.GetTable<MANUTENZIONI>();
			}
		}
		
		public System.Data.Linq.Table<PERMESSI> PERMESSI
		{
			get
			{
				return this.GetTable<PERMESSI>();
			}
		}
		
		public System.Data.Linq.Table<PERMESSI_MACCHINARI> PERMESSI_MACCHINARI
		{
			get
			{
				return this.GetTable<PERMESSI_MACCHINARI>();
			}
		}
		
		public System.Data.Linq.Table<PERMESSI_MANOVALI> PERMESSI_MANOVALI
		{
			get
			{
				return this.GetTable<PERMESSI_MANOVALI>();
			}
		}
		
		public System.Data.Linq.Table<PERMESSI_STRUMENTI_COMPLESSI> PERMESSI_STRUMENTI_COMPLESSI
		{
			get
			{
				return this.GetTable<PERMESSI_STRUMENTI_COMPLESSI>();
			}
		}
		
		public System.Data.Linq.Table<PIANTE> PIANTE
		{
			get
			{
				return this.GetTable<PIANTE>();
			}
		}
		
		public System.Data.Linq.Table<PRODOTTI> PRODOTTI
		{
			get
			{
				return this.GetTable<PRODOTTI>();
			}
		}
		
		public System.Data.Linq.Table<RICERCATORI> RICERCATORI
		{
			get
			{
				return this.GetTable<RICERCATORI>();
			}
		}
		
		public System.Data.Linq.Table<SERRE> SERRE
		{
			get
			{
				return this.GetTable<SERRE>();
			}
		}
		
		public System.Data.Linq.Table<SERRE_INCUBAZIONE> SERRE_INCUBAZIONE
		{
			get
			{
				return this.GetTable<SERRE_INCUBAZIONE>();
			}
		}
		
		public System.Data.Linq.Table<STRUMENTI_COMPLESSI> STRUMENTI_COMPLESSI
		{
			get
			{
				return this.GetTable<STRUMENTI_COMPLESSI>();
			}
		}
		
		public System.Data.Linq.Table<STRUMENTI_COMPLESSI_UTILIZZATI> STRUMENTI_COMPLESSI_UTILIZZATI
		{
			get
			{
				return this.GetTable<STRUMENTI_COMPLESSI_UTILIZZATI>();
			}
		}
		
		public System.Data.Linq.Table<STRUTTURE> STRUTTURE
		{
			get
			{
				return this.GetTable<STRUTTURE>();
			}
		}
		
		public System.Data.Linq.Table<SUPERVISIONI> SUPERVISIONI
		{
			get
			{
				return this.GetTable<SUPERVISIONI>();
			}
		}
		
		public System.Data.Linq.Table<UNIVERSITÀ> UNIVERSITÀ
		{
			get
			{
				return this.GetTable<UNIVERSITÀ>();
			}
		}
		
		public System.Data.Linq.Table<UTENSILI> UTENSILI
		{
			get
			{
				return this.GetTable<UTENSILI>();
			}
		}
		
		public System.Data.Linq.Table<VIAGGI_ISTRUZIONE> VIAGGI_ISTRUZIONE
		{
			get
			{
				return this.GetTable<VIAGGI_ISTRUZIONE>();
			}
		}
		
		public System.Data.Linq.Table<VISITE> VISITE
		{
			get
			{
				return this.GetTable<VISITE>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ACCESSI_INVENTARIO")]
	public partial class ACCESSI_INVENTARIO : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDipendente;
		
		private System.DateTime _DataOra;
		
		private int _IDStruttura;
		
		private System.Nullable<int> _IDGarage;
		
		private System.Nullable<int> _IDMagazzino;
		
		private System.Nullable<int> _IDSerraIncubazione;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
		private EntityRef<GARAGE> _GARAGE;
		
		private EntityRef<MAGAZZINI> _MAGAZZINI;
		
		private EntityRef<SERRE_INCUBAZIONE> _SERRE_INCUBAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDipendenteChanging(int value);
    partial void OnIDDipendenteChanged();
    partial void OnDataOraChanging(System.DateTime value);
    partial void OnDataOraChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDGarageChanging(System.Nullable<int> value);
    partial void OnIDGarageChanged();
    partial void OnIDMagazzinoChanging(System.Nullable<int> value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDSerraIncubazioneChanging(System.Nullable<int> value);
    partial void OnIDSerraIncubazioneChanged();
    #endregion
		
		public ACCESSI_INVENTARIO()
		{
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			this._GARAGE = default(EntityRef<GARAGE>);
			this._MAGAZZINI = default(EntityRef<MAGAZZINI>);
			this._SERRE_INCUBAZIONE = default(EntityRef<SERRE_INCUBAZIONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDipendente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDipendente
		{
			get
			{
				return this._IDDipendente;
			}
			set
			{
				if ((this._IDDipendente != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						
						
						
						
						
						
						new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDipendenteChanging(value);
					this.SendPropertyChanging();
					this._IDDipendente = value;
					this.SendPropertyChanged("IDDipendente");
					this.OnIDDipendenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOra", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataOra
		{
			get
			{
				return this._DataOra;
			}
			set
			{
				if ((this._DataOra != value))
				{
					this.OnDataOraChanging(value);
					this.SendPropertyChanging();
					this._DataOra = value;
					this.SendPropertyChanged("DataOra");
					this.OnDataOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (((this._GARAGE.HasLoadedOrAssignedValue || this._MAGAZZINI.HasLoadedOrAssignedValue) 
								|| this._SERRE_INCUBAZIONE.HasLoadedOrAssignedValue))
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGarage", DbType="Int")]
		public System.Nullable<int> IDGarage
		{
			get
			{
				return this._IDGarage;
			}
			set
			{
				if ((this._IDGarage != value))
				{
					if (this._GARAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGarageChanging(value);
					this.SendPropertyChanging();
					this._IDGarage = value;
					this.SendPropertyChanged("IDGarage");
					this.OnIDGarageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int")]
		public System.Nullable<int> IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerraIncubazione", DbType="Int")]
		public System.Nullable<int> IDSerraIncubazione
		{
			get
			{
				return this._IDSerraIncubazione;
			}
			set
			{
				if ((this._IDSerraIncubazione != value))
				{
					if (this._SERRE_INCUBAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraIncubazioneChanging(value);
					this.SendPropertyChanging();
					this._IDSerraIncubazione = value;
					this.SendPropertyChanged("IDSerraIncubazione");
					this.OnIDSerraIncubazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_ACCESSI_INVENTARIO", Storage="_DIPENDENTI", ThisKey="IDDipendente", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.ACCESSI_INVENTARIO.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.ACCESSI_INVENTARIO.Add(this);
						this._IDDipendente = value.IDDipendente;
					}
					else
					{
						this._IDDipendente = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GARAGE_ACCESSI_INVENTARIO", Storage="_GARAGE", ThisKey="IDStruttura,IDGarage", OtherKey="IDStruttura,IDGarage", IsForeignKey=true)]
		public GARAGE GARAGE
		{
			get
			{
				return this._GARAGE.Entity;
			}
			set
			{
				GARAGE previousValue = this._GARAGE.Entity;
				if (((previousValue != value) 
							|| (this._GARAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GARAGE.Entity = null;
						previousValue.ACCESSI_INVENTARIO.Remove(this);
					}
					this._GARAGE.Entity = value;
					if ((value != null))
					{
						value.ACCESSI_INVENTARIO.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDGarage = value.IDGarage;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDGarage = default(Nullable<int>);
					}
					this.SendPropertyChanged("GARAGE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_ACCESSI_INVENTARIO", Storage="_MAGAZZINI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino", IsForeignKey=true)]
		public MAGAZZINI MAGAZZINI
		{
			get
			{
				return this._MAGAZZINI.Entity;
			}
			set
			{
				MAGAZZINI previousValue = this._MAGAZZINI.Entity;
				if (((previousValue != value) 
							|| (this._MAGAZZINI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAGAZZINI.Entity = null;
						previousValue.ACCESSI_INVENTARIO.Remove(this);
					}
					this._MAGAZZINI.Entity = value;
					if ((value != null))
					{
						value.ACCESSI_INVENTARIO.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDMagazzino = default(Nullable<int>);
					}
					this.SendPropertyChanged("MAGAZZINI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_INCUBAZIONE_ACCESSI_INVENTARIO", Storage="_SERRE_INCUBAZIONE", ThisKey="IDStruttura,IDSerraIncubazione", OtherKey="IDStruttura,IDSerraIncubazione", IsForeignKey=true)]
		public SERRE_INCUBAZIONE SERRE_INCUBAZIONE
		{
			get
			{
				return this._SERRE_INCUBAZIONE.Entity;
			}
			set
			{
				SERRE_INCUBAZIONE previousValue = this._SERRE_INCUBAZIONE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE_INCUBAZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE_INCUBAZIONE.Entity = null;
						previousValue.ACCESSI_INVENTARIO.Remove(this);
					}
					this._SERRE_INCUBAZIONE.Entity = value;
					if ((value != null))
					{
						value.ACCESSI_INVENTARIO.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerraIncubazione = value.IDSerraIncubazione;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerraIncubazione = default(Nullable<int>);
					}
					this.SendPropertyChanged("SERRE_INCUBAZIONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ANNOTAZIONI")]
	public partial class ANNOTAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEsperimento;
		
		private int _NumeroAnnotazione;
		
		private System.DateTime _DataOra;
		
		private string _Testo;
		
		private int _IDRicercatore;
		
		private EntityRef<ESPERIMENTI> _ESPERIMENTI;
		
		private EntityRef<RICERCATORI> _RICERCATORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEsperimentoChanging(int value);
    partial void OnIDEsperimentoChanged();
    partial void OnNumeroAnnotazioneChanging(int value);
    partial void OnNumeroAnnotazioneChanged();
    partial void OnDataOraChanging(System.DateTime value);
    partial void OnDataOraChanged();
    partial void OnTestoChanging(string value);
    partial void OnTestoChanged();
    partial void OnIDRicercatoreChanging(int value);
    partial void OnIDRicercatoreChanged();
    #endregion
		
		public ANNOTAZIONI()
		{
			this._ESPERIMENTI = default(EntityRef<ESPERIMENTI>);
			this._RICERCATORI = default(EntityRef<RICERCATORI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEsperimento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEsperimento
		{
			get
			{
				return this._IDEsperimento;
			}
			set
			{
				if ((this._IDEsperimento != value))
				{
					if (this._ESPERIMENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEsperimentoChanging(value);
					this.SendPropertyChanging();
					this._IDEsperimento = value;
					this.SendPropertyChanged("IDEsperimento");
					this.OnIDEsperimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroAnnotazione", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NumeroAnnotazione
		{
			get
			{
				return this._NumeroAnnotazione;
			}
			set
			{
				if ((this._NumeroAnnotazione != value))
				{
					this.OnNumeroAnnotazioneChanging(value);
					this.SendPropertyChanging();
					this._NumeroAnnotazione = value;
					this.SendPropertyChanged("NumeroAnnotazione");
					this.OnNumeroAnnotazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOra", DbType="DateTime NOT NULL")]
		public System.DateTime DataOra
		{
			get
			{
				return this._DataOra;
			}
			set
			{
				if ((this._DataOra != value))
				{
					this.OnDataOraChanging(value);
					this.SendPropertyChanging();
					this._DataOra = value;
					this.SendPropertyChanged("DataOra");
					this.OnDataOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Testo", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Testo
		{
			get
			{
				return this._Testo;
			}
			set
			{
				if ((this._Testo != value))
				{
					this.OnTestoChanging(value);
					this.SendPropertyChanging();
					this._Testo = value;
					this.SendPropertyChanged("Testo");
					this.OnTestoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRicercatore", DbType="Int NOT NULL")]
		public int IDRicercatore
		{
			get
			{
				return this._IDRicercatore;
			}
			set
			{
				if ((this._IDRicercatore != value))
				{
					if (this._RICERCATORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRicercatoreChanging(value);
					this.SendPropertyChanging();
					this._IDRicercatore = value;
					this.SendPropertyChanged("IDRicercatore");
					this.OnIDRicercatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPERIMENTI_ANNOTAZIONI", Storage="_ESPERIMENTI", ThisKey="IDEsperimento", OtherKey="IDEsperimento", IsForeignKey=true)]
		public ESPERIMENTI ESPERIMENTI
		{
			get
			{
				return this._ESPERIMENTI.Entity;
			}
			set
			{
				ESPERIMENTI previousValue = this._ESPERIMENTI.Entity;
				if (((previousValue != value) 
							|| (this._ESPERIMENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESPERIMENTI.Entity = null;
						previousValue.ANNOTAZIONI.Remove(this);
					}
					this._ESPERIMENTI.Entity = value;
					if ((value != null))
					{
						value.ANNOTAZIONI.Add(this);
						this._IDEsperimento = value.IDEsperimento;
					}
					else
					{
						this._IDEsperimento = default(int);
					}
					this.SendPropertyChanged("ESPERIMENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_ANNOTAZIONI", Storage="_RICERCATORI", ThisKey="IDRicercatore", OtherKey="IDRicercatore", IsForeignKey=true)]
		public RICERCATORI RICERCATORI
		{
			get
			{
				return this._RICERCATORI.Entity;
			}
			set
			{
				RICERCATORI previousValue = this._RICERCATORI.Entity;
				if (((previousValue != value) 
							|| (this._RICERCATORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RICERCATORI.Entity = null;
						previousValue.ANNOTAZIONI.Remove(this);
					}
					this._RICERCATORI.Entity = value;
					if ((value != null))
					{
						value.ANNOTAZIONI.Add(this);
						this._IDRicercatore = value.IDRicercatore;
					}
					else
					{
						this._IDRicercatore = default(int);
					}
					this.SendPropertyChanged("RICERCATORI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLIMI")]
	public partial class CLIMI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDClima;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private string _Luce;
		
		private int _OreLuce;
		
		private int _Umidità;
		
		private int _Temperatura;
		
		private EntitySet<SERRE> _SERRE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClimaChanging(int value);
    partial void OnIDClimaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnLuceChanging(string value);
    partial void OnLuceChanged();
    partial void OnOreLuceChanging(int value);
    partial void OnOreLuceChanged();
    partial void OnUmiditàChanging(int value);
    partial void OnUmiditàChanged();
    partial void OnTemperaturaChanging(int value);
    partial void OnTemperaturaChanged();
    #endregion
		
		public CLIMI()
		{
			this._SERRE = new EntitySet<SERRE>(new Action<SERRE>(this.attach_SERRE), new Action<SERRE>(this.detach_SERRE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClima", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDClima
		{
			get
			{
				return this._IDClima;
			}
			set
			{
				if ((this._IDClima != value))
				{
					this.OnIDClimaChanging(value);
					this.SendPropertyChanging();
					this._IDClima = value;
					this.SendPropertyChanged("IDClima");
					this.OnIDClimaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Luce", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Luce
		{
			get
			{
				return this._Luce;
			}
			set
			{
				if ((this._Luce != value))
				{
					this.OnLuceChanging(value);
					this.SendPropertyChanging();
					this._Luce = value;
					this.SendPropertyChanged("Luce");
					this.OnLuceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OreLuce", DbType="Int NOT NULL")]
		public int OreLuce
		{
			get
			{
				return this._OreLuce;
			}
			set
			{
				if ((this._OreLuce != value))
				{
					this.OnOreLuceChanging(value);
					this.SendPropertyChanging();
					this._OreLuce = value;
					this.SendPropertyChanged("OreLuce");
					this.OnOreLuceChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Umidità", DbType="Int NOT NULL")]
		public int Umidità
		{
			get
			{
				return this._Umidità;
			}
			set
			{
				if ((this._Umidità != value))
				{
					this.OnUmiditàChanging(value);
					this.SendPropertyChanging();
					this._Umidità = value;
					this.SendPropertyChanged("Umidità");
					this.OnUmiditàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Temperatura", DbType="Int NOT NULL")]
		public int Temperatura
		{
			get
			{
				return this._Temperatura;
			}
			set
			{
				if ((this._Temperatura != value))
				{
					this.OnTemperaturaChanging(value);
					this.SendPropertyChanging();
					this._Temperatura = value;
					this.SendPropertyChanged("Temperatura");
					this.OnTemperaturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIMI_SERRE", Storage="_SERRE", ThisKey="IDClima", OtherKey="IDClima")]
		public EntitySet<SERRE> SERRE
		{
			get
			{
				return this._SERRE;
			}
			set
			{
				this._SERRE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_SERRE(SERRE entity)
		{
			this.SendPropertyChanging();
			entity.CLIMI = this;
		}
		
		private void detach_SERRE(SERRE entity)
		{
			this.SendPropertyChanging();
			entity.CLIMI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLUSTER")]
	public partial class CLUSTER : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDSerra;
		
		private int _IDCluster;
		
		private string _Dimensione;
		
		private string _ComposizioneNPKTerreno;
		
		private EntitySet<CLUSTER_PIANTE> _CLUSTER_PIANTE;
		
		private EntityRef<SERRE> _SERRE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(int value);
    partial void OnIDSerraChanged();
    partial void OnIDClusterChanging(int value);
    partial void OnIDClusterChanged();
    partial void OnDimensioneChanging(string value);
    partial void OnDimensioneChanged();
    partial void OnComposizioneNPKTerrenoChanging(string value);
    partial void OnComposizioneNPKTerrenoChanged();
    #endregion
		
		public CLUSTER()
		{
			this._CLUSTER_PIANTE = new EntitySet<CLUSTER_PIANTE>(new Action<CLUSTER_PIANTE>(this.attach_CLUSTER_PIANTE), new Action<CLUSTER_PIANTE>(this.detach_CLUSTER_PIANTE));
			this._SERRE = default(EntityRef<SERRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCluster", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDCluster
		{
			get
			{
				return this._IDCluster;
			}
			set
			{
				if ((this._IDCluster != value))
				{
					this.OnIDClusterChanging(value);
					this.SendPropertyChanging();
					this._IDCluster = value;
					this.SendPropertyChanged("IDCluster");
					this.OnIDClusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensione", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dimensione
		{
			get
			{
				return this._Dimensione;
			}
			set
			{
				if ((this._Dimensione != value))
				{
					this.OnDimensioneChanging(value);
					this.SendPropertyChanging();
					this._Dimensione = value;
					this.SendPropertyChanged("Dimensione");
					this.OnDimensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComposizioneNPKTerreno", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string ComposizioneNPKTerreno
		{
			get
			{
				return this._ComposizioneNPKTerreno;
			}
			set
			{
				if ((this._ComposizioneNPKTerreno != value))
				{
					this.OnComposizioneNPKTerrenoChanging(value);
					this.SendPropertyChanging();
					this._ComposizioneNPKTerreno = value;
					this.SendPropertyChanged("ComposizioneNPKTerreno");
					this.OnComposizioneNPKTerrenoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLUSTER_CLUSTER_PIANTE", Storage="_CLUSTER_PIANTE", ThisKey="IDStruttura,IDSerra,IDCluster", OtherKey="IDStruttura,IDSerra,IDCluster")]
		public EntitySet<CLUSTER_PIANTE> CLUSTER_PIANTE
		{
			get
			{
				return this._CLUSTER_PIANTE;
			}
			set
			{
				this._CLUSTER_PIANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_CLUSTER", Storage="_SERRE", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra", IsForeignKey=true)]
		public SERRE SERRE
		{
			get
			{
				return this._SERRE.Entity;
			}
			set
			{
				SERRE previousValue = this._SERRE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE.Entity = null;
						previousValue.CLUSTER.Remove(this);
					}
					this._SERRE.Entity = value;
					if ((value != null))
					{
						value.CLUSTER.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerra = value.IDSerra;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerra = default(int);
					}
					this.SendPropertyChanged("SERRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CLUSTER_PIANTE(CLUSTER_PIANTE entity)
		{
			this.SendPropertyChanging();
			entity.CLUSTER = this;
		}
		
		private void detach_CLUSTER_PIANTE(CLUSTER_PIANTE entity)
		{
			this.SendPropertyChanging();
			entity.CLUSTER = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLUSTER_EMBRIONI")]
	public partial class CLUSTER_EMBRIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPianta;
		
		private int _IDClusterEmbrioni;
		
		private System.DateTime _DataSemina;
		
		private System.Nullable<System.DateTime> _DataGerminazione;
		
		private System.Nullable<System.DateTime> _DataUscita;
		
		private int _EmbrioniFalliti;
		
		private int _IDStruttura;
		
		private int _IDSerraIncubazione;
		
		private EntityRef<PIANTE> _PIANTE;
		
		private EntityRef<SERRE_INCUBAZIONE> _SERRE_INCUBAZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPiantaChanging(int value);
    partial void OnIDPiantaChanged();
    partial void OnIDClusterEmbrioniChanging(int value);
    partial void OnIDClusterEmbrioniChanged();
    partial void OnDataSeminaChanging(System.DateTime value);
    partial void OnDataSeminaChanged();
    partial void OnDataGerminazioneChanging(System.Nullable<System.DateTime> value);
    partial void OnDataGerminazioneChanged();
    partial void OnDataUscitaChanging(System.Nullable<System.DateTime> value);
    partial void OnDataUscitaChanged();
    partial void OnEmbrioniFallitiChanging(int value);
    partial void OnEmbrioniFallitiChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraIncubazioneChanging(int value);
    partial void OnIDSerraIncubazioneChanged();
    #endregion
		
		public CLUSTER_EMBRIONI()
		{
			this._PIANTE = default(EntityRef<PIANTE>);
			this._SERRE_INCUBAZIONE = default(EntityRef<SERRE_INCUBAZIONE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPianta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPianta
		{
			get
			{
				return this._IDPianta;
			}
			set
			{
				if ((this._IDPianta != value))
				{
					if (this._PIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPiantaChanging(value);
					this.SendPropertyChanging();
					this._IDPianta = value;
					this.SendPropertyChanged("IDPianta");
					this.OnIDPiantaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClusterEmbrioni", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDClusterEmbrioni
		{
			get
			{
				return this._IDClusterEmbrioni;
			}
			set
			{
				if ((this._IDClusterEmbrioni != value))
				{
					this.OnIDClusterEmbrioniChanging(value);
					this.SendPropertyChanging();
					this._IDClusterEmbrioni = value;
					this.SendPropertyChanged("IDClusterEmbrioni");
					this.OnIDClusterEmbrioniChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSemina", DbType="DateTime NOT NULL")]
		public System.DateTime DataSemina
		{
			get
			{
				return this._DataSemina;
			}
			set
			{
				if ((this._DataSemina != value))
				{
					this.OnDataSeminaChanging(value);
					this.SendPropertyChanging();
					this._DataSemina = value;
					this.SendPropertyChanged("DataSemina");
					this.OnDataSeminaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataGerminazione", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataGerminazione
		{
			get
			{
				return this._DataGerminazione;
			}
			set
			{
				if ((this._DataGerminazione != value))
				{
					this.OnDataGerminazioneChanging(value);
					this.SendPropertyChanging();
					this._DataGerminazione = value;
					this.SendPropertyChanged("DataGerminazione");
					this.OnDataGerminazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataUscita", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataUscita
		{
			get
			{
				return this._DataUscita;
			}
			set
			{
				if ((this._DataUscita != value))
				{
					this.OnDataUscitaChanging(value);
					this.SendPropertyChanging();
					this._DataUscita = value;
					this.SendPropertyChanged("DataUscita");
					this.OnDataUscitaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EmbrioniFalliti", DbType="Int NOT NULL")]
		public int EmbrioniFalliti
		{
			get
			{
				return this._EmbrioniFalliti;
			}
			set
			{
				if ((this._EmbrioniFalliti != value))
				{
					this.OnEmbrioniFallitiChanging(value);
					this.SendPropertyChanging();
					this._EmbrioniFalliti = value;
					this.SendPropertyChanged("EmbrioniFalliti");
					this.OnEmbrioniFallitiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._SERRE_INCUBAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerraIncubazione", DbType="Int NOT NULL")]
		public int IDSerraIncubazione
		{
			get
			{
				return this._IDSerraIncubazione;
			}
			set
			{
				if ((this._IDSerraIncubazione != value))
				{
					if (this._SERRE_INCUBAZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraIncubazioneChanging(value);
					this.SendPropertyChanging();
					this._IDSerraIncubazione = value;
					this.SendPropertyChanged("IDSerraIncubazione");
					this.OnIDSerraIncubazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PIANTE_CLUSTER_EMBRIONI", Storage="_PIANTE", ThisKey="IDPianta", OtherKey="IDPianta", IsForeignKey=true)]
		public PIANTE PIANTE
		{
			get
			{
				return this._PIANTE.Entity;
			}
			set
			{
				PIANTE previousValue = this._PIANTE.Entity;
				if (((previousValue != value) 
							|| (this._PIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PIANTE.Entity = null;
						previousValue.CLUSTER_EMBRIONI.Remove(this);
					}
					this._PIANTE.Entity = value;
					if ((value != null))
					{
						value.CLUSTER_EMBRIONI.Add(this);
						this._IDPianta = value.IDPianta;
					}
					else
					{
						this._IDPianta = default(int);
					}
					this.SendPropertyChanged("PIANTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_INCUBAZIONE_CLUSTER_EMBRIONI", Storage="_SERRE_INCUBAZIONE", ThisKey="IDStruttura,IDSerraIncubazione", OtherKey="IDStruttura,IDSerraIncubazione", IsForeignKey=true)]
		public SERRE_INCUBAZIONE SERRE_INCUBAZIONE
		{
			get
			{
				return this._SERRE_INCUBAZIONE.Entity;
			}
			set
			{
				SERRE_INCUBAZIONE previousValue = this._SERRE_INCUBAZIONE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE_INCUBAZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE_INCUBAZIONE.Entity = null;
						previousValue.CLUSTER_EMBRIONI.Remove(this);
					}
					this._SERRE_INCUBAZIONE.Entity = value;
					if ((value != null))
					{
						value.CLUSTER_EMBRIONI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerraIncubazione = value.IDSerraIncubazione;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerraIncubazione = default(int);
					}
					this.SendPropertyChanged("SERRE_INCUBAZIONE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CLUSTER_PIANTE")]
	public partial class CLUSTER_PIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDClusterPiante;
		
		private System.DateTime _DataInizio;
		
		private System.DateTime _DataFine;
		
		private System.DateTime _DataTrapianto;
		
		private System.Nullable<System.DateTime> _DataEspianto;
		
		private int _NumeroPianteIniziali;
		
		private int _NumeroPianteMorte;
		
		private string _TrattamentoBiologico;
		
		private System.Nullable<System.DateTime> _DataSmaltimento;
		
		private int _IDStruttura;
		
		private int _IDSerra;
		
		private int _IDCluster;
		
		private int _IDEsperimento;
		
		private int _IDPianta;
		
		private EntitySet<IRRIGAZIONI> _IRRIGAZIONI;
		
		private EntitySet<LAVORI_EFFETTUATI> _LAVORI_EFFETTUATI;
		
		private EntityRef<CLUSTER> _CLUSTER;
		
		private EntityRef<ESPERIMENTI> _ESPERIMENTI;
		
		private EntityRef<PIANTE> _PIANTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClusterPianteChanging(int value);
    partial void OnIDClusterPianteChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.DateTime value);
    partial void OnDataFineChanged();
    partial void OnDataTrapiantoChanging(System.DateTime value);
    partial void OnDataTrapiantoChanged();
    partial void OnDataEspiantoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataEspiantoChanged();
    partial void OnNumeroPianteInizialiChanging(int value);
    partial void OnNumeroPianteInizialiChanged();
    partial void OnNumeroPianteMorteChanging(int value);
    partial void OnNumeroPianteMorteChanged();
    partial void OnTrattamentoBiologicoChanging(string value);
    partial void OnTrattamentoBiologicoChanged();
    partial void OnDataSmaltimentoChanging(System.Nullable<System.DateTime> value);
    partial void OnDataSmaltimentoChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(int value);
    partial void OnIDSerraChanged();
    partial void OnIDClusterChanging(int value);
    partial void OnIDClusterChanged();
    partial void OnIDEsperimentoChanging(int value);
    partial void OnIDEsperimentoChanged();
    partial void OnIDPiantaChanging(int value);
    partial void OnIDPiantaChanged();
    #endregion
		
		public CLUSTER_PIANTE()
		{
			this._IRRIGAZIONI = new EntitySet<IRRIGAZIONI>(new Action<IRRIGAZIONI>(this.attach_IRRIGAZIONI), new Action<IRRIGAZIONI>(this.detach_IRRIGAZIONI));
			this._LAVORI_EFFETTUATI = new EntitySet<LAVORI_EFFETTUATI>(new Action<LAVORI_EFFETTUATI>(this.attach_LAVORI_EFFETTUATI), new Action<LAVORI_EFFETTUATI>(this.detach_LAVORI_EFFETTUATI));
			this._CLUSTER = default(EntityRef<CLUSTER>);
			this._ESPERIMENTI = default(EntityRef<ESPERIMENTI>);
			this._PIANTE = default(EntityRef<PIANTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClusterPiante", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDClusterPiante
		{
			get
			{
				return this._IDClusterPiante;
			}
			set
			{
				if ((this._IDClusterPiante != value))
				{
					this.OnIDClusterPianteChanging(value);
					this.SendPropertyChanging();
					this._IDClusterPiante = value;
					this.SendPropertyChanged("IDClusterPiante");
					this.OnIDClusterPianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="DateTime NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="DateTime NOT NULL")]
		public System.DateTime DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataTrapianto", DbType="DateTime NOT NULL")]
		public System.DateTime DataTrapianto
		{
			get
			{
				return this._DataTrapianto;
			}
			set
			{
				if ((this._DataTrapianto != value))
				{
					this.OnDataTrapiantoChanging(value);
					this.SendPropertyChanging();
					this._DataTrapianto = value;
					this.SendPropertyChanged("DataTrapianto");
					this.OnDataTrapiantoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataEspianto", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataEspianto
		{
			get
			{
				return this._DataEspianto;
			}
			set
			{
				if ((this._DataEspianto != value))
				{
					this.OnDataEspiantoChanging(value);
					this.SendPropertyChanging();
					this._DataEspianto = value;
					this.SendPropertyChanged("DataEspianto");
					this.OnDataEspiantoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPianteIniziali", DbType="Int NOT NULL")]
		public int NumeroPianteIniziali
		{
			get
			{
				return this._NumeroPianteIniziali;
			}
			set
			{
				if ((this._NumeroPianteIniziali != value))
				{
					this.OnNumeroPianteInizialiChanging(value);
					this.SendPropertyChanging();
					this._NumeroPianteIniziali = value;
					this.SendPropertyChanged("NumeroPianteIniziali");
					this.OnNumeroPianteInizialiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPianteMorte", DbType="Int NOT NULL")]
		public int NumeroPianteMorte
		{
			get
			{
				return this._NumeroPianteMorte;
			}
			set
			{
				if ((this._NumeroPianteMorte != value))
				{
					this.OnNumeroPianteMorteChanging(value);
					this.SendPropertyChanging();
					this._NumeroPianteMorte = value;
					this.SendPropertyChanged("NumeroPianteMorte");
					this.OnNumeroPianteMorteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TrattamentoBiologico", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string TrattamentoBiologico
		{
			get
			{
				return this._TrattamentoBiologico;
			}
			set
			{
				if ((this._TrattamentoBiologico != value))
				{
					this.OnTrattamentoBiologicoChanging(value);
					this.SendPropertyChanging();
					this._TrattamentoBiologico = value;
					this.SendPropertyChanged("TrattamentoBiologico");
					this.OnTrattamentoBiologicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataSmaltimento", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataSmaltimento
		{
			get
			{
				return this._DataSmaltimento;
			}
			set
			{
				if ((this._DataSmaltimento != value))
				{
					this.OnDataSmaltimentoChanging(value);
					this.SendPropertyChanging();
					this._DataSmaltimento = value;
					this.SendPropertyChanged("DataSmaltimento");
					this.OnDataSmaltimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._CLUSTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int NOT NULL")]
		public int IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					if (this._CLUSTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCluster", DbType="Int NOT NULL")]
		public int IDCluster
		{
			get
			{
				return this._IDCluster;
			}
			set
			{
				if ((this._IDCluster != value))
				{
					if (this._CLUSTER.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClusterChanging(value);
					this.SendPropertyChanging();
					this._IDCluster = value;
					this.SendPropertyChanged("IDCluster");
					this.OnIDClusterChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEsperimento", DbType="Int NOT NULL")]
		public int IDEsperimento
		{
			get
			{
				return this._IDEsperimento;
			}
			set
			{
				if ((this._IDEsperimento != value))
				{
					if (this._ESPERIMENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEsperimentoChanging(value);
					this.SendPropertyChanging();
					this._IDEsperimento = value;
					this.SendPropertyChanged("IDEsperimento");
					this.OnIDEsperimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPianta", DbType="Int NOT NULL")]
		public int IDPianta
		{
			get
			{
				return this._IDPianta;
			}
			set
			{
				if ((this._IDPianta != value))
				{
					if (this._PIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPiantaChanging(value);
					this.SendPropertyChanging();
					this._IDPianta = value;
					this.SendPropertyChanged("IDPianta");
					this.OnIDPiantaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLUSTER_PIANTE_IRRIGAZIONI", Storage="_IRRIGAZIONI", ThisKey="IDClusterPiante", OtherKey="IDClusterPiante")]
		public EntitySet<IRRIGAZIONI> IRRIGAZIONI
		{
			get
			{
				return this._IRRIGAZIONI;
			}
			set
			{
				this._IRRIGAZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLUSTER_PIANTE_LAVORI_EFFETTUATI", Storage="_LAVORI_EFFETTUATI", ThisKey="IDClusterPiante", OtherKey="IDClusterPiante")]
		public EntitySet<LAVORI_EFFETTUATI> LAVORI_EFFETTUATI
		{
			get
			{
				return this._LAVORI_EFFETTUATI;
			}
			set
			{
				this._LAVORI_EFFETTUATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLUSTER_CLUSTER_PIANTE", Storage="_CLUSTER", ThisKey="IDStruttura,IDSerra,IDCluster", OtherKey="IDStruttura,IDSerra,IDCluster", IsForeignKey=true)]
		public CLUSTER CLUSTER
		{
			get
			{
				return this._CLUSTER.Entity;
			}
			set
			{
				CLUSTER previousValue = this._CLUSTER.Entity;
				if (((previousValue != value) 
							|| (this._CLUSTER.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLUSTER.Entity = null;
						previousValue.CLUSTER_PIANTE.Remove(this);
					}
					this._CLUSTER.Entity = value;
					if ((value != null))
					{
						value.CLUSTER_PIANTE.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerra = value.IDSerra;
						this._IDCluster = value.IDCluster;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerra = default(int);
						this._IDCluster = default(int);
					}
					this.SendPropertyChanged("CLUSTER");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPERIMENTI_CLUSTER_PIANTE", Storage="_ESPERIMENTI", ThisKey="IDEsperimento", OtherKey="IDEsperimento", IsForeignKey=true)]
		public ESPERIMENTI ESPERIMENTI
		{
			get
			{
				return this._ESPERIMENTI.Entity;
			}
			set
			{
				ESPERIMENTI previousValue = this._ESPERIMENTI.Entity;
				if (((previousValue != value) 
							|| (this._ESPERIMENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESPERIMENTI.Entity = null;
						previousValue.CLUSTER_PIANTE.Remove(this);
					}
					this._ESPERIMENTI.Entity = value;
					if ((value != null))
					{
						value.CLUSTER_PIANTE.Add(this);
						this._IDEsperimento = value.IDEsperimento;
					}
					else
					{
						this._IDEsperimento = default(int);
					}
					this.SendPropertyChanged("ESPERIMENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PIANTE_CLUSTER_PIANTE", Storage="_PIANTE", ThisKey="IDPianta", OtherKey="IDPianta", IsForeignKey=true)]
		public PIANTE PIANTE
		{
			get
			{
				return this._PIANTE.Entity;
			}
			set
			{
				PIANTE previousValue = this._PIANTE.Entity;
				if (((previousValue != value) 
							|| (this._PIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PIANTE.Entity = null;
						previousValue.CLUSTER_PIANTE.Remove(this);
					}
					this._PIANTE.Entity = value;
					if ((value != null))
					{
						value.CLUSTER_PIANTE.Add(this);
						this._IDPianta = value.IDPianta;
					}
					else
					{
						this._IDPianta = default(int);
					}
					this.SendPropertyChanged("PIANTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_IRRIGAZIONI(IRRIGAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.CLUSTER_PIANTE = this;
		}
		
		private void detach_IRRIGAZIONI(IRRIGAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.CLUSTER_PIANTE = null;
		}
		
		private void attach_LAVORI_EFFETTUATI(LAVORI_EFFETTUATI entity)
		{
			this.SendPropertyChanging();
			entity.CLUSTER_PIANTE = this;
		}
		
		private void detach_LAVORI_EFFETTUATI(LAVORI_EFFETTUATI entity)
		{
			this.SendPropertyChanging();
			entity.CLUSTER_PIANTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.COLLABORAZIONI")]
	public partial class COLLABORAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEsperimento;
		
		private int _IDRicercatore;
		
		private EntityRef<ESPERIMENTI> _ESPERIMENTI;
		
		private EntityRef<RICERCATORI> _RICERCATORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEsperimentoChanging(int value);
    partial void OnIDEsperimentoChanged();
    partial void OnIDRicercatoreChanging(int value);
    partial void OnIDRicercatoreChanged();
    #endregion
		
		public COLLABORAZIONI()
		{
			this._ESPERIMENTI = default(EntityRef<ESPERIMENTI>);
			this._RICERCATORI = default(EntityRef<RICERCATORI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEsperimento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEsperimento
		{
			get
			{
				return this._IDEsperimento;
			}
			set
			{
				if ((this._IDEsperimento != value))
				{
					if (this._ESPERIMENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDEsperimentoChanging(value);
					this.SendPropertyChanging();
					this._IDEsperimento = value;
					this.SendPropertyChanged("IDEsperimento");
					this.OnIDEsperimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRicercatore", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRicercatore
		{
			get
			{
				return this._IDRicercatore;
			}
			set
			{
				if ((this._IDRicercatore != value))
				{
					if (this._RICERCATORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRicercatoreChanging(value);
					this.SendPropertyChanging();
					this._IDRicercatore = value;
					this.SendPropertyChanged("IDRicercatore");
					this.OnIDRicercatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPERIMENTI_COLLABORAZIONI", Storage="_ESPERIMENTI", ThisKey="IDEsperimento", OtherKey="IDEsperimento", IsForeignKey=true)]
		public ESPERIMENTI ESPERIMENTI
		{
			get
			{
				return this._ESPERIMENTI.Entity;
			}
			set
			{
				ESPERIMENTI previousValue = this._ESPERIMENTI.Entity;
				if (((previousValue != value) 
							|| (this._ESPERIMENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ESPERIMENTI.Entity = null;
						previousValue.COLLABORAZIONI.Remove(this);
					}
					this._ESPERIMENTI.Entity = value;
					if ((value != null))
					{
						value.COLLABORAZIONI.Add(this);
						this._IDEsperimento = value.IDEsperimento;
					}
					else
					{
						this._IDEsperimento = default(int);
					}
					this.SendPropertyChanged("ESPERIMENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_COLLABORAZIONI", Storage="_RICERCATORI", ThisKey="IDRicercatore", OtherKey="IDRicercatore", IsForeignKey=true)]
		public RICERCATORI RICERCATORI
		{
			get
			{
				return this._RICERCATORI.Entity;
			}
			set
			{
				RICERCATORI previousValue = this._RICERCATORI.Entity;
				if (((previousValue != value) 
							|| (this._RICERCATORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RICERCATORI.Entity = null;
						previousValue.COLLABORAZIONI.Remove(this);
					}
					this._RICERCATORI.Entity = value;
					if ((value != null))
					{
						value.COLLABORAZIONI.Add(this);
						this._IDRicercatore = value.IDRicercatore;
					}
					else
					{
						this._IDRicercatore = default(int);
					}
					this.SendPropertyChanged("RICERCATORI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CONTRATTI")]
	public partial class CONTRATTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDContratto;
		
		private string _TipoContratto;
		
		private System.DateTime _DataInizio;
		
		private System.Nullable<System.DateTime> _DataFine;
		
		private int _IDDipendente;
		
		private int _IDStruttura;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
		private EntityRef<STRUTTURE> _STRUTTURE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDContrattoChanging(int value);
    partial void OnIDContrattoChanged();
    partial void OnTipoContrattoChanging(string value);
    partial void OnTipoContrattoChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFineChanged();
    partial void OnIDDipendenteChanging(int value);
    partial void OnIDDipendenteChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    #endregion
		
		public CONTRATTI()
		{
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			this._STRUTTURE = default(EntityRef<STRUTTURE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDContratto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDContratto
		{
			get
			{
				return this._IDContratto;
			}
			set
			{
				if ((this._IDContratto != value))
				{
					this.OnIDContrattoChanging(value);
					this.SendPropertyChanging();
					this._IDContratto = value;
					this.SendPropertyChanged("IDContratto");
					this.OnIDContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TipoContratto", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string TipoContratto
		{
			get
			{
				return this._TipoContratto;
			}
			set
			{
				if ((this._TipoContratto != value))
				{
					this.OnTipoContrattoChanging(value);
					this.SendPropertyChanging();
					this._TipoContratto = value;
					this.SendPropertyChanged("TipoContratto");
					this.OnTipoContrattoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="DateTime NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDipendente", DbType="Int NOT NULL")]
		public int IDDipendente
		{
			get
			{
				return this._IDDipendente;
			}
			set
			{
				if ((this._IDDipendente != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDipendenteChanging(value);
					this.SendPropertyChanging();
					this._IDDipendente = value;
					this.SendPropertyChanged("IDDipendente");
					this.OnIDDipendenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUTTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_CONTRATTI", Storage="_DIPENDENTI", ThisKey="IDDipendente", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.CONTRATTI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.CONTRATTI.Add(this);
						this._IDDipendente = value.IDDipendente;
					}
					else
					{
						this._IDDipendente = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_CONTRATTI", Storage="_STRUTTURE", ThisKey="IDStruttura", OtherKey="IDStruttura", IsForeignKey=true)]
		public STRUTTURE STRUTTURE
		{
			get
			{
				return this._STRUTTURE.Entity;
			}
			set
			{
				STRUTTURE previousValue = this._STRUTTURE.Entity;
				if (((previousValue != value) 
							|| (this._STRUTTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUTTURE.Entity = null;
						previousValue.CONTRATTI.Remove(this);
					}
					this._STRUTTURE.Entity = value;
					if ((value != null))
					{
						value.CONTRATTI.Add(this);
						this._IDStruttura = value.IDStruttura;
					}
					else
					{
						this._IDStruttura = default(int);
					}
					this.SendPropertyChanged("STRUTTURE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.DIPENDENTI")]
	public partial class DIPENDENTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDDipendente;
		
		private string _CF;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Provincia;
		
		private string _CAP;
		
		private string _Via;
		
		private string _NumeroCivico;
		
		private string _Telefono;
		
		private string _Mail;
		
		private string _Ruolo;
		
		private int _Stipendio;
		
		private string _CV;
		
		private int _IDStruttura;
		
		private string _AbilitazioneProdottiChimici;
		
		private EntitySet<ACCESSI_INVENTARIO> _ACCESSI_INVENTARIO;
		
		private EntitySet<CONTRATTI> _CONTRATTI;
		
		private EntitySet<ESPERIMENTI> _ESPERIMENTI;
		
		private EntitySet<LAVORI_EFFETTUATI> _LAVORI_EFFETTUATI;
		
		private EntitySet<MANUTENZIONI> _MANUTENZIONI;
		
		private EntitySet<PERMESSI> _PERMESSI;
		
		private EntitySet<PERMESSI_MANOVALI> _PERMESSI_MANOVALI;
		
		private EntitySet<STRUTTURE> _STRUTTURE;
		
		private EntitySet<SUPERVISIONI> _SUPERVISIONI;
		
		private EntitySet<VIAGGI_ISTRUZIONE> _VIAGGI_ISTRUZIONE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDDipendenteChanging(int value);
    partial void OnIDDipendenteChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroCivicoChanging(string value);
    partial void OnNumeroCivicoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnRuoloChanging(string value);
    partial void OnRuoloChanged();
    partial void OnStipendioChanging(int value);
    partial void OnStipendioChanged();
    partial void OnCVChanging(string value);
    partial void OnCVChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnAbilitazioneProdottiChimiciChanging(string value);
    partial void OnAbilitazioneProdottiChimiciChanged();
    #endregion
		
		public DIPENDENTI()
		{
			this._ACCESSI_INVENTARIO = new EntitySet<ACCESSI_INVENTARIO>(new Action<ACCESSI_INVENTARIO>(this.attach_ACCESSI_INVENTARIO), new Action<ACCESSI_INVENTARIO>(this.detach_ACCESSI_INVENTARIO));
			this._CONTRATTI = new EntitySet<CONTRATTI>(new Action<CONTRATTI>(this.attach_CONTRATTI), new Action<CONTRATTI>(this.detach_CONTRATTI));
			this._ESPERIMENTI = new EntitySet<ESPERIMENTI>(new Action<ESPERIMENTI>(this.attach_ESPERIMENTI), new Action<ESPERIMENTI>(this.detach_ESPERIMENTI));
			this._LAVORI_EFFETTUATI = new EntitySet<LAVORI_EFFETTUATI>(new Action<LAVORI_EFFETTUATI>(this.attach_LAVORI_EFFETTUATI), new Action<LAVORI_EFFETTUATI>(this.detach_LAVORI_EFFETTUATI));
			this._MANUTENZIONI = new EntitySet<MANUTENZIONI>(new Action<MANUTENZIONI>(this.attach_MANUTENZIONI), new Action<MANUTENZIONI>(this.detach_MANUTENZIONI));
			this._PERMESSI = new EntitySet<PERMESSI>(new Action<PERMESSI>(this.attach_PERMESSI), new Action<PERMESSI>(this.detach_PERMESSI));
			this._PERMESSI_MANOVALI = new EntitySet<PERMESSI_MANOVALI>(new Action<PERMESSI_MANOVALI>(this.attach_PERMESSI_MANOVALI), new Action<PERMESSI_MANOVALI>(this.detach_PERMESSI_MANOVALI));
			this._STRUTTURE = new EntitySet<STRUTTURE>(new Action<STRUTTURE>(this.attach_STRUTTURE), new Action<STRUTTURE>(this.detach_STRUTTURE));
			this._SUPERVISIONI = new EntitySet<SUPERVISIONI>(new Action<SUPERVISIONI>(this.attach_SUPERVISIONI), new Action<SUPERVISIONI>(this.detach_SUPERVISIONI));
			this._VIAGGI_ISTRUZIONE = new EntitySet<VIAGGI_ISTRUZIONE>(new Action<VIAGGI_ISTRUZIONE>(this.attach_VIAGGI_ISTRUZIONE), new Action<VIAGGI_ISTRUZIONE>(this.detach_VIAGGI_ISTRUZIONE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDipendente", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDDipendente
		{
			get
			{
				return this._IDDipendente;
			}
			set
			{
				if ((this._IDDipendente != value))
				{
					this.OnIDDipendenteChanging(value);
					this.SendPropertyChanging();
					this._IDDipendente = value;
					this.SendPropertyChanged("IDDipendente");
					this.OnIDDipendenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCivico", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NumeroCivico
		{
			get
			{
				return this._NumeroCivico;
			}
			set
			{
				if ((this._NumeroCivico != value))
				{
					this.OnNumeroCivicoChanging(value);
					this.SendPropertyChanging();
					this._NumeroCivico = value;
					this.SendPropertyChanged("NumeroCivico");
					this.OnNumeroCivicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Ruolo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Ruolo
		{
			get
			{
				return this._Ruolo;
			}
			set
			{
				if ((this._Ruolo != value))
				{
					this.OnRuoloChanging(value);
					this.SendPropertyChanging();
					this._Ruolo = value;
					this.SendPropertyChanged("Ruolo");
					this.OnRuoloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Stipendio", DbType="Int NOT NULL")]
		public int Stipendio
		{
			get
			{
				return this._Stipendio;
			}
			set
			{
				if ((this._Stipendio != value))
				{
					this.OnStipendioChanging(value);
					this.SendPropertyChanging();
					this._Stipendio = value;
					this.SendPropertyChanged("Stipendio");
					this.OnStipendioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CV", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string CV
		{
			get
			{
				return this._CV;
			}
			set
			{
				if ((this._CV != value))
				{
					this.OnCVChanging(value);
					this.SendPropertyChanging();
					this._CV = value;
					this.SendPropertyChanged("CV");
					this.OnCVChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AbilitazioneProdottiChimici", DbType="VarChar(15)")]
		public string AbilitazioneProdottiChimici
		{
			get
			{
				return this._AbilitazioneProdottiChimici;
			}
			set
			{
				if ((this._AbilitazioneProdottiChimici != value))
				{
					this.OnAbilitazioneProdottiChimiciChanging(value);
					this.SendPropertyChanging();
					this._AbilitazioneProdottiChimici = value;
					this.SendPropertyChanged("AbilitazioneProdottiChimici");
					this.OnAbilitazioneProdottiChimiciChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_ACCESSI_INVENTARIO", Storage="_ACCESSI_INVENTARIO", ThisKey="IDDipendente", OtherKey="IDDipendente")]
		public EntitySet<ACCESSI_INVENTARIO> ACCESSI_INVENTARIO
		{
			get
			{
				return this._ACCESSI_INVENTARIO;
			}
			set
			{
				this._ACCESSI_INVENTARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_CONTRATTI", Storage="_CONTRATTI", ThisKey="IDDipendente", OtherKey="IDDipendente")]
		public EntitySet<CONTRATTI> CONTRATTI
		{
			get
			{
				return this._CONTRATTI;
			}
			set
			{
				this._CONTRATTI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_ESPERIMENTI", Storage="_ESPERIMENTI", ThisKey="IDDipendente", OtherKey="IDAutorizzante")]
		public EntitySet<ESPERIMENTI> ESPERIMENTI
		{
			get
			{
				return this._ESPERIMENTI;
			}
			set
			{
				this._ESPERIMENTI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_LAVORI_EFFETTUATI", Storage="_LAVORI_EFFETTUATI", ThisKey="IDDipendente", OtherKey="IDManovale")]
		public EntitySet<LAVORI_EFFETTUATI> LAVORI_EFFETTUATI
		{
			get
			{
				return this._LAVORI_EFFETTUATI;
			}
			set
			{
				this._LAVORI_EFFETTUATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_MANUTENZIONI", Storage="_MANUTENZIONI", ThisKey="IDDipendente", OtherKey="IDManutentore")]
		public EntitySet<MANUTENZIONI> MANUTENZIONI
		{
			get
			{
				return this._MANUTENZIONI;
			}
			set
			{
				this._MANUTENZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_PERMESSI", Storage="_PERMESSI", ThisKey="IDDipendente", OtherKey="IDSupervisoreConcedente")]
		public EntitySet<PERMESSI> PERMESSI
		{
			get
			{
				return this._PERMESSI;
			}
			set
			{
				this._PERMESSI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_PERMESSI_MANOVALI", Storage="_PERMESSI_MANOVALI", ThisKey="IDDipendente", OtherKey="IDManovale")]
		public EntitySet<PERMESSI_MANOVALI> PERMESSI_MANOVALI
		{
			get
			{
				return this._PERMESSI_MANOVALI;
			}
			set
			{
				this._PERMESSI_MANOVALI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_STRUTTURE", Storage="_STRUTTURE", ThisKey="IDDipendente", OtherKey="IDDirettore")]
		public EntitySet<STRUTTURE> STRUTTURE
		{
			get
			{
				return this._STRUTTURE;
			}
			set
			{
				this._STRUTTURE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_SUPERVISIONI", Storage="_SUPERVISIONI", ThisKey="IDDipendente", OtherKey="IDSupervisore")]
		public EntitySet<SUPERVISIONI> SUPERVISIONI
		{
			get
			{
				return this._SUPERVISIONI;
			}
			set
			{
				this._SUPERVISIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_VIAGGI_ISTRUZIONE", Storage="_VIAGGI_ISTRUZIONE", ThisKey="IDDipendente", OtherKey="IDGuida")]
		public EntitySet<VIAGGI_ISTRUZIONE> VIAGGI_ISTRUZIONE
		{
			get
			{
				return this._VIAGGI_ISTRUZIONE;
			}
			set
			{
				this._VIAGGI_ISTRUZIONE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_CONTRATTI(CONTRATTI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_CONTRATTI(CONTRATTI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_ESPERIMENTI(ESPERIMENTI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_ESPERIMENTI(ESPERIMENTI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_LAVORI_EFFETTUATI(LAVORI_EFFETTUATI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_LAVORI_EFFETTUATI(LAVORI_EFFETTUATI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_MANUTENZIONI(MANUTENZIONI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_MANUTENZIONI(MANUTENZIONI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_PERMESSI(PERMESSI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_PERMESSI(PERMESSI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_PERMESSI_MANOVALI(PERMESSI_MANOVALI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_PERMESSI_MANOVALI(PERMESSI_MANOVALI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_STRUTTURE(STRUTTURE entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_STRUTTURE(STRUTTURE entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_SUPERVISIONI(SUPERVISIONI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_SUPERVISIONI(SUPERVISIONI entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
		
		private void attach_VIAGGI_ISTRUZIONE(VIAGGI_ISTRUZIONE entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = this;
		}
		
		private void detach_VIAGGI_ISTRUZIONE(VIAGGI_ISTRUZIONE entity)
		{
			this.SendPropertyChanging();
			entity.DIPENDENTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ESPERIMENTI")]
	public partial class ESPERIMENTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDEsperimento;
		
		private System.DateTime _DataInizio;
		
		private System.DateTime _DataFine;
		
		private System.DateTime _DataApprovazione;
		
		private string _Descrizione;
		
		private int _IDAutorizzante;
		
		private int _IDRicercatoreCapo;
		
		private EntitySet<ANNOTAZIONI> _ANNOTAZIONI;
		
		private EntitySet<CLUSTER_PIANTE> _CLUSTER_PIANTE;
		
		private EntitySet<COLLABORAZIONI> _COLLABORAZIONI;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
		private EntityRef<RICERCATORI> _RICERCATORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDEsperimentoChanging(int value);
    partial void OnIDEsperimentoChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.DateTime value);
    partial void OnDataFineChanged();
    partial void OnDataApprovazioneChanging(System.DateTime value);
    partial void OnDataApprovazioneChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnIDAutorizzanteChanging(int value);
    partial void OnIDAutorizzanteChanged();
    partial void OnIDRicercatoreCapoChanging(int value);
    partial void OnIDRicercatoreCapoChanged();
    #endregion
		
		public ESPERIMENTI()
		{
			this._ANNOTAZIONI = new EntitySet<ANNOTAZIONI>(new Action<ANNOTAZIONI>(this.attach_ANNOTAZIONI), new Action<ANNOTAZIONI>(this.detach_ANNOTAZIONI));
			this._CLUSTER_PIANTE = new EntitySet<CLUSTER_PIANTE>(new Action<CLUSTER_PIANTE>(this.attach_CLUSTER_PIANTE), new Action<CLUSTER_PIANTE>(this.detach_CLUSTER_PIANTE));
			this._COLLABORAZIONI = new EntitySet<COLLABORAZIONI>(new Action<COLLABORAZIONI>(this.attach_COLLABORAZIONI), new Action<COLLABORAZIONI>(this.detach_COLLABORAZIONI));
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			this._RICERCATORI = default(EntityRef<RICERCATORI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDEsperimento", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDEsperimento
		{
			get
			{
				return this._IDEsperimento;
			}
			set
			{
				if ((this._IDEsperimento != value))
				{
					this.OnIDEsperimentoChanging(value);
					this.SendPropertyChanging();
					this._IDEsperimento = value;
					this.SendPropertyChanged("IDEsperimento");
					this.OnIDEsperimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="DateTime NOT NULL")]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="DateTime NOT NULL")]
		public System.DateTime DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataApprovazione", DbType="DateTime NOT NULL")]
		public System.DateTime DataApprovazione
		{
			get
			{
				return this._DataApprovazione;
			}
			set
			{
				if ((this._DataApprovazione != value))
				{
					this.OnDataApprovazioneChanging(value);
					this.SendPropertyChanging();
					this._DataApprovazione = value;
					this.SendPropertyChanged("DataApprovazione");
					this.OnDataApprovazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAutorizzante", DbType="Int NOT NULL")]
		public int IDAutorizzante
		{
			get
			{
				return this._IDAutorizzante;
			}
			set
			{
				if ((this._IDAutorizzante != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAutorizzanteChanging(value);
					this.SendPropertyChanging();
					this._IDAutorizzante = value;
					this.SendPropertyChanged("IDAutorizzante");
					this.OnIDAutorizzanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRicercatoreCapo", DbType="Int NOT NULL")]
		public int IDRicercatoreCapo
		{
			get
			{
				return this._IDRicercatoreCapo;
			}
			set
			{
				if ((this._IDRicercatoreCapo != value))
				{
					if (this._RICERCATORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRicercatoreCapoChanging(value);
					this.SendPropertyChanging();
					this._IDRicercatoreCapo = value;
					this.SendPropertyChanged("IDRicercatoreCapo");
					this.OnIDRicercatoreCapoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPERIMENTI_ANNOTAZIONI", Storage="_ANNOTAZIONI", ThisKey="IDEsperimento", OtherKey="IDEsperimento")]
		public EntitySet<ANNOTAZIONI> ANNOTAZIONI
		{
			get
			{
				return this._ANNOTAZIONI;
			}
			set
			{
				this._ANNOTAZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPERIMENTI_CLUSTER_PIANTE", Storage="_CLUSTER_PIANTE", ThisKey="IDEsperimento", OtherKey="IDEsperimento")]
		public EntitySet<CLUSTER_PIANTE> CLUSTER_PIANTE
		{
			get
			{
				return this._CLUSTER_PIANTE;
			}
			set
			{
				this._CLUSTER_PIANTE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ESPERIMENTI_COLLABORAZIONI", Storage="_COLLABORAZIONI", ThisKey="IDEsperimento", OtherKey="IDEsperimento")]
		public EntitySet<COLLABORAZIONI> COLLABORAZIONI
		{
			get
			{
				return this._COLLABORAZIONI;
			}
			set
			{
				this._COLLABORAZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_ESPERIMENTI", Storage="_DIPENDENTI", ThisKey="IDAutorizzante", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.ESPERIMENTI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.ESPERIMENTI.Add(this);
						this._IDAutorizzante = value.IDDipendente;
					}
					else
					{
						this._IDAutorizzante = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_ESPERIMENTI", Storage="_RICERCATORI", ThisKey="IDRicercatoreCapo", OtherKey="IDRicercatore", IsForeignKey=true)]
		public RICERCATORI RICERCATORI
		{
			get
			{
				return this._RICERCATORI.Entity;
			}
			set
			{
				RICERCATORI previousValue = this._RICERCATORI.Entity;
				if (((previousValue != value) 
							|| (this._RICERCATORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RICERCATORI.Entity = null;
						previousValue.ESPERIMENTI.Remove(this);
					}
					this._RICERCATORI.Entity = value;
					if ((value != null))
					{
						value.ESPERIMENTI.Add(this);
						this._IDRicercatoreCapo = value.IDRicercatore;
					}
					else
					{
						this._IDRicercatoreCapo = default(int);
					}
					this.SendPropertyChanged("RICERCATORI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANNOTAZIONI(ANNOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.ESPERIMENTI = this;
		}
		
		private void detach_ANNOTAZIONI(ANNOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.ESPERIMENTI = null;
		}
		
		private void attach_CLUSTER_PIANTE(CLUSTER_PIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ESPERIMENTI = this;
		}
		
		private void detach_CLUSTER_PIANTE(CLUSTER_PIANTE entity)
		{
			this.SendPropertyChanging();
			entity.ESPERIMENTI = null;
		}
		
		private void attach_COLLABORAZIONI(COLLABORAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.ESPERIMENTI = this;
		}
		
		private void detach_COLLABORAZIONI(COLLABORAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.ESPERIMENTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.GARAGE")]
	public partial class GARAGE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDGarage;
		
		private string _Nome;
		
		private int _Dimensione;
		
		private int _ParcheggiTotali;
		
		private int _ParcheggiLiberi;
		
		private EntitySet<ACCESSI_INVENTARIO> _ACCESSI_INVENTARIO;
		
		private EntitySet<MACCHINARI> _MACCHINARI;
		
		private EntityRef<STRUTTURE> _STRUTTURE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDGarageChanging(int value);
    partial void OnIDGarageChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDimensioneChanging(int value);
    partial void OnDimensioneChanged();
    partial void OnParcheggiTotaliChanging(int value);
    partial void OnParcheggiTotaliChanged();
    partial void OnParcheggiLiberiChanging(int value);
    partial void OnParcheggiLiberiChanged();
    #endregion
		
		public GARAGE()
		{
			this._ACCESSI_INVENTARIO = new EntitySet<ACCESSI_INVENTARIO>(new Action<ACCESSI_INVENTARIO>(this.attach_ACCESSI_INVENTARIO), new Action<ACCESSI_INVENTARIO>(this.detach_ACCESSI_INVENTARIO));
			this._MACCHINARI = new EntitySet<MACCHINARI>(new Action<MACCHINARI>(this.attach_MACCHINARI), new Action<MACCHINARI>(this.detach_MACCHINARI));
			this._STRUTTURE = default(EntityRef<STRUTTURE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUTTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGarage", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDGarage
		{
			get
			{
				return this._IDGarage;
			}
			set
			{
				if ((this._IDGarage != value))
				{
					this.OnIDGarageChanging(value);
					this.SendPropertyChanging();
					this._IDGarage = value;
					this.SendPropertyChanged("IDGarage");
					this.OnIDGarageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensione", DbType="Int NOT NULL")]
		public int Dimensione
		{
			get
			{
				return this._Dimensione;
			}
			set
			{
				if ((this._Dimensione != value))
				{
					this.OnDimensioneChanging(value);
					this.SendPropertyChanging();
					this._Dimensione = value;
					this.SendPropertyChanged("Dimensione");
					this.OnDimensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcheggiTotali", DbType="Int NOT NULL")]
		public int ParcheggiTotali
		{
			get
			{
				return this._ParcheggiTotali;
			}
			set
			{
				if ((this._ParcheggiTotali != value))
				{
					this.OnParcheggiTotaliChanging(value);
					this.SendPropertyChanging();
					this._ParcheggiTotali = value;
					this.SendPropertyChanged("ParcheggiTotali");
					this.OnParcheggiTotaliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ParcheggiLiberi", DbType="Int NOT NULL")]
		public int ParcheggiLiberi
		{
			get
			{
				return this._ParcheggiLiberi;
			}
			set
			{
				if ((this._ParcheggiLiberi != value))
				{
					this.OnParcheggiLiberiChanging(value);
					this.SendPropertyChanging();
					this._ParcheggiLiberi = value;
					this.SendPropertyChanged("ParcheggiLiberi");
					this.OnParcheggiLiberiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GARAGE_ACCESSI_INVENTARIO", Storage="_ACCESSI_INVENTARIO", ThisKey="IDStruttura,IDGarage", OtherKey="IDStruttura,IDGarage")]
		public EntitySet<ACCESSI_INVENTARIO> ACCESSI_INVENTARIO
		{
			get
			{
				return this._ACCESSI_INVENTARIO;
			}
			set
			{
				this._ACCESSI_INVENTARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GARAGE_MACCHINARI", Storage="_MACCHINARI", ThisKey="IDStruttura,IDGarage", OtherKey="IDStruttura,IDGarage")]
		public EntitySet<MACCHINARI> MACCHINARI
		{
			get
			{
				return this._MACCHINARI;
			}
			set
			{
				this._MACCHINARI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_GARAGE", Storage="_STRUTTURE", ThisKey="IDStruttura", OtherKey="IDStruttura", IsForeignKey=true)]
		public STRUTTURE STRUTTURE
		{
			get
			{
				return this._STRUTTURE.Entity;
			}
			set
			{
				STRUTTURE previousValue = this._STRUTTURE.Entity;
				if (((previousValue != value) 
							|| (this._STRUTTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUTTURE.Entity = null;
						previousValue.GARAGE.Remove(this);
					}
					this._STRUTTURE.Entity = value;
					if ((value != null))
					{
						value.GARAGE.Add(this);
						this._IDStruttura = value.IDStruttura;
					}
					else
					{
						this._IDStruttura = default(int);
					}
					this.SendPropertyChanged("STRUTTURE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.GARAGE = this;
		}
		
		private void detach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.GARAGE = null;
		}
		
		private void attach_MACCHINARI(MACCHINARI entity)
		{
			this.SendPropertyChanging();
			entity.GARAGE = this;
		}
		
		private void detach_MACCHINARI(MACCHINARI entity)
		{
			this.SendPropertyChanging();
			entity.GARAGE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.IRRIGAZIONI")]
	public partial class IRRIGAZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDClusterPiante;
		
		private System.DateTime _DataInizio;
		
		private System.DateTime _OraInizio;
		
		private System.DateTime _OraFine;
		
		private System.Nullable<System.DateTime> _DataFine;
		
		private int _PressioneAcqua;
		
		private EntityRef<CLUSTER_PIANTE> _CLUSTER_PIANTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDClusterPianteChanging(int value);
    partial void OnIDClusterPianteChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnOraInizioChanging(System.DateTime value);
    partial void OnOraInizioChanged();
    partial void OnOraFineChanging(System.DateTime value);
    partial void OnOraFineChanged();
    partial void OnDataFineChanging(System.Nullable<System.DateTime> value);
    partial void OnDataFineChanged();
    partial void OnPressioneAcquaChanging(int value);
    partial void OnPressioneAcquaChanged();
    #endregion
		
		public IRRIGAZIONI()
		{
			this._CLUSTER_PIANTE = default(EntityRef<CLUSTER_PIANTE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClusterPiante", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDClusterPiante
		{
			get
			{
				return this._IDClusterPiante;
			}
			set
			{
				if ((this._IDClusterPiante != value))
				{
					if (this._CLUSTER_PIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClusterPianteChanging(value);
					this.SendPropertyChanging();
					this._IDClusterPiante = value;
					this.SendPropertyChanged("IDClusterPiante");
					this.OnIDClusterPianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraInizio", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime OraInizio
		{
			get
			{
				return this._OraInizio;
			}
			set
			{
				if ((this._OraInizio != value))
				{
					this.OnOraInizioChanging(value);
					this.SendPropertyChanging();
					this._OraInizio = value;
					this.SendPropertyChanged("OraInizio");
					this.OnOraInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OraFine", DbType="DateTime NOT NULL")]
		public System.DateTime OraFine
		{
			get
			{
				return this._OraFine;
			}
			set
			{
				if ((this._OraFine != value))
				{
					this.OnOraFineChanging(value);
					this.SendPropertyChanging();
					this._OraFine = value;
					this.SendPropertyChanged("OraFine");
					this.OnOraFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="DateTime")]
		public System.Nullable<System.DateTime> DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PressioneAcqua", DbType="Int NOT NULL")]
		public int PressioneAcqua
		{
			get
			{
				return this._PressioneAcqua;
			}
			set
			{
				if ((this._PressioneAcqua != value))
				{
					this.OnPressioneAcquaChanging(value);
					this.SendPropertyChanging();
					this._PressioneAcqua = value;
					this.SendPropertyChanged("PressioneAcqua");
					this.OnPressioneAcquaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLUSTER_PIANTE_IRRIGAZIONI", Storage="_CLUSTER_PIANTE", ThisKey="IDClusterPiante", OtherKey="IDClusterPiante", IsForeignKey=true)]
		public CLUSTER_PIANTE CLUSTER_PIANTE
		{
			get
			{
				return this._CLUSTER_PIANTE.Entity;
			}
			set
			{
				CLUSTER_PIANTE previousValue = this._CLUSTER_PIANTE.Entity;
				if (((previousValue != value) 
							|| (this._CLUSTER_PIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLUSTER_PIANTE.Entity = null;
						previousValue.IRRIGAZIONI.Remove(this);
					}
					this._CLUSTER_PIANTE.Entity = value;
					if ((value != null))
					{
						value.IRRIGAZIONI.Add(this);
						this._IDClusterPiante = value.IDClusterPiante;
					}
					else
					{
						this._IDClusterPiante = default(int);
					}
					this.SendPropertyChanged("CLUSTER_PIANTE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAVORI")]
	public partial class LAVORI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLavoro;
		
		private string _Nome;
		
		private string _Categoria;
		
		private string _Descrizione;
		
		private System.Nullable<int> _IDStruttura;
		
		private System.Nullable<int> _IDMagazzino;
		
		private System.Nullable<int> _IDProdotto;
		
		private EntitySet<LAVORI_EFFETTUATI> _LAVORI_EFFETTUATI;
		
		private EntityRef<PRODOTTI> _PRODOTTI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLavoroChanging(int value);
    partial void OnIDLavoroChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCategoriaChanging(string value);
    partial void OnCategoriaChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnIDStrutturaChanging(System.Nullable<int> value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(System.Nullable<int> value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDProdottoChanging(System.Nullable<int> value);
    partial void OnIDProdottoChanged();
    #endregion
		
		public LAVORI()
		{
			this._LAVORI_EFFETTUATI = new EntitySet<LAVORI_EFFETTUATI>(new Action<LAVORI_EFFETTUATI>(this.attach_LAVORI_EFFETTUATI), new Action<LAVORI_EFFETTUATI>(this.detach_LAVORI_EFFETTUATI));
			this._PRODOTTI = default(EntityRef<PRODOTTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLavoro
		{
			get
			{
				return this._IDLavoro;
			}
			set
			{
				if ((this._IDLavoro != value))
				{
					this.OnIDLavoroChanging(value);
					this.SendPropertyChanging();
					this._IDLavoro = value;
					this.SendPropertyChanged("IDLavoro");
					this.OnIDLavoroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Categoria", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Categoria
		{
			get
			{
				return this._Categoria;
			}
			set
			{
				if ((this._Categoria != value))
				{
					this.OnCategoriaChanging(value);
					this.SendPropertyChanging();
					this._Categoria = value;
					this.SendPropertyChanged("Categoria");
					this.OnCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int")]
		public System.Nullable<int> IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._PRODOTTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int")]
		public System.Nullable<int> IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._PRODOTTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProdotto", DbType="Int")]
		public System.Nullable<int> IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					if (this._PRODOTTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_LAVORI_EFFETTUATI", Storage="_LAVORI_EFFETTUATI", ThisKey="IDLavoro", OtherKey="IDLavoro")]
		public EntitySet<LAVORI_EFFETTUATI> LAVORI_EFFETTUATI
		{
			get
			{
				return this._LAVORI_EFFETTUATI;
			}
			set
			{
				this._LAVORI_EFFETTUATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTI_LAVORI", Storage="_PRODOTTI", ThisKey="IDStruttura,IDMagazzino,IDProdotto", OtherKey="IDStruttura,IDMagazzino,IDProdotto", IsForeignKey=true)]
		public PRODOTTI PRODOTTI
		{
			get
			{
				return this._PRODOTTI.Entity;
			}
			set
			{
				PRODOTTI previousValue = this._PRODOTTI.Entity;
				if (((previousValue != value) 
							|| (this._PRODOTTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PRODOTTI.Entity = null;
						previousValue.LAVORI.Remove(this);
					}
					this._PRODOTTI.Entity = value;
					if ((value != null))
					{
						value.LAVORI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
						this._IDProdotto = value.IDProdotto;
					}
					else
					{
						this._IDStruttura = default(Nullable<int>);
						this._IDMagazzino = default(Nullable<int>);
						this._IDProdotto = default(Nullable<int>);
					}
					this.SendPropertyChanged("PRODOTTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAVORI_EFFETTUATI(LAVORI_EFFETTUATI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI = this;
		}
		
		private void detach_LAVORI_EFFETTUATI(LAVORI_EFFETTUATI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.LAVORI_EFFETTUATI")]
	public partial class LAVORI_EFFETTUATI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLavoro;
		
		private int _IDLavoroEffettuato;
		
		private System.DateTime _DataOraInizio;
		
		private System.DateTime _DataOraFine;
		
		private int _IDClusterPiante;
		
		private int _IDManovale;
		
		private EntitySet<MACCHINARI_UTILIZZATI> _MACCHINARI_UTILIZZATI;
		
		private EntitySet<STRUMENTI_COMPLESSI_UTILIZZATI> _STRUMENTI_COMPLESSI_UTILIZZATI;
		
		private EntityRef<CLUSTER_PIANTE> _CLUSTER_PIANTE;
		
		private EntityRef<LAVORI> _LAVORI;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLavoroChanging(int value);
    partial void OnIDLavoroChanged();
    partial void OnIDLavoroEffettuatoChanging(int value);
    partial void OnIDLavoroEffettuatoChanged();
    partial void OnDataOraInizioChanging(System.DateTime value);
    partial void OnDataOraInizioChanged();
    partial void OnDataOraFineChanging(System.DateTime value);
    partial void OnDataOraFineChanged();
    partial void OnIDClusterPianteChanging(int value);
    partial void OnIDClusterPianteChanged();
    partial void OnIDManovaleChanging(int value);
    partial void OnIDManovaleChanged();
    #endregion
		
		public LAVORI_EFFETTUATI()
		{
			this._MACCHINARI_UTILIZZATI = new EntitySet<MACCHINARI_UTILIZZATI>(new Action<MACCHINARI_UTILIZZATI>(this.attach_MACCHINARI_UTILIZZATI), new Action<MACCHINARI_UTILIZZATI>(this.detach_MACCHINARI_UTILIZZATI));
			this._STRUMENTI_COMPLESSI_UTILIZZATI = new EntitySet<STRUMENTI_COMPLESSI_UTILIZZATI>(new Action<STRUMENTI_COMPLESSI_UTILIZZATI>(this.attach_STRUMENTI_COMPLESSI_UTILIZZATI), new Action<STRUMENTI_COMPLESSI_UTILIZZATI>(this.detach_STRUMENTI_COMPLESSI_UTILIZZATI));
			this._CLUSTER_PIANTE = default(EntityRef<CLUSTER_PIANTE>);
			this._LAVORI = default(EntityRef<LAVORI>);
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLavoro
		{
			get
			{
				return this._IDLavoro;
			}
			set
			{
				if ((this._IDLavoro != value))
				{
					if (this._LAVORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLavoroChanging(value);
					this.SendPropertyChanging();
					this._IDLavoro = value;
					this.SendPropertyChanged("IDLavoro");
					this.OnIDLavoroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoroEffettuato", DbType="Int NOT NULL IDENTITY(1,1)", IsPrimaryKey=true)]
		public int IDLavoroEffettuato
		{
			get
			{
				return this._IDLavoroEffettuato;
			}
			set
			{
				if ((this._IDLavoroEffettuato != value))
				{
					this.OnIDLavoroEffettuatoChanging(value);
					this.SendPropertyChanging();
					this._IDLavoroEffettuato = value;
					this.SendPropertyChanged("IDLavoroEffettuato");
					this.OnIDLavoroEffettuatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraInizio", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraInizio
		{
			get
			{
				return this._DataOraInizio;
			}
			set
			{
				if ((this._DataOraInizio != value))
				{
					this.OnDataOraInizioChanging(value);
					this.SendPropertyChanging();
					this._DataOraInizio = value;
					this.SendPropertyChanged("DataOraInizio");
					this.OnDataOraInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOraFine", DbType="DateTime NOT NULL")]
		public System.DateTime DataOraFine
		{
			get
			{
				return this._DataOraFine;
			}
			set
			{
				if ((this._DataOraFine != value))
				{
					this.OnDataOraFineChanging(value);
					this.SendPropertyChanging();
					this._DataOraFine = value;
					this.SendPropertyChanged("DataOraFine");
					this.OnDataOraFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClusterPiante", DbType="Int NOT NULL")]
		public int IDClusterPiante
		{
			get
			{
				return this._IDClusterPiante;
			}
			set
			{
				if ((this._IDClusterPiante != value))
				{
					if (this._CLUSTER_PIANTE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClusterPianteChanging(value);
					this.SendPropertyChanging();
					this._IDClusterPiante = value;
					this.SendPropertyChanged("IDClusterPiante");
					this.OnIDClusterPianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManovale", DbType="Int NOT NULL")]
		public int IDManovale
		{
			get
			{
				return this._IDManovale;
			}
			set
			{
				if ((this._IDManovale != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDManovaleChanging(value);
					this.SendPropertyChanging();
					this._IDManovale = value;
					this.SendPropertyChanged("IDManovale");
					this.OnIDManovaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_EFFETTUATI_MACCHINARI_UTILIZZATI", Storage="_MACCHINARI_UTILIZZATI", ThisKey="IDLavoro,IDLavoroEffettuato", OtherKey="IDLavoro,IDLavoroEffettuato")]
		public EntitySet<MACCHINARI_UTILIZZATI> MACCHINARI_UTILIZZATI
		{
			get
			{
				return this._MACCHINARI_UTILIZZATI;
			}
			set
			{
				this._MACCHINARI_UTILIZZATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_EFFETTUATI_STRUMENTI_COMPLESSI_UTILIZZATI", Storage="_STRUMENTI_COMPLESSI_UTILIZZATI", ThisKey="IDLavoro,IDLavoroEffettuato", OtherKey="IDLavoro,IDLavoroEffettuato")]
		public EntitySet<STRUMENTI_COMPLESSI_UTILIZZATI> STRUMENTI_COMPLESSI_UTILIZZATI
		{
			get
			{
				return this._STRUMENTI_COMPLESSI_UTILIZZATI;
			}
			set
			{
				this._STRUMENTI_COMPLESSI_UTILIZZATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLUSTER_PIANTE_LAVORI_EFFETTUATI", Storage="_CLUSTER_PIANTE", ThisKey="IDClusterPiante", OtherKey="IDClusterPiante", IsForeignKey=true)]
		public CLUSTER_PIANTE CLUSTER_PIANTE
		{
			get
			{
				return this._CLUSTER_PIANTE.Entity;
			}
			set
			{
				CLUSTER_PIANTE previousValue = this._CLUSTER_PIANTE.Entity;
				if (((previousValue != value) 
							|| (this._CLUSTER_PIANTE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLUSTER_PIANTE.Entity = null;
						previousValue.LAVORI_EFFETTUATI.Remove(this);
					}
					this._CLUSTER_PIANTE.Entity = value;
					if ((value != null))
					{
						value.LAVORI_EFFETTUATI.Add(this);
						this._IDClusterPiante = value.IDClusterPiante;
					}
					else
					{
						this._IDClusterPiante = default(int);
					}
					this.SendPropertyChanged("CLUSTER_PIANTE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_LAVORI_EFFETTUATI", Storage="_LAVORI", ThisKey="IDLavoro", OtherKey="IDLavoro", IsForeignKey=true)]
		public LAVORI LAVORI
		{
			get
			{
				return this._LAVORI.Entity;
			}
			set
			{
				LAVORI previousValue = this._LAVORI.Entity;
				if (((previousValue != value) 
							|| (this._LAVORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAVORI.Entity = null;
						previousValue.LAVORI_EFFETTUATI.Remove(this);
					}
					this._LAVORI.Entity = value;
					if ((value != null))
					{
						value.LAVORI_EFFETTUATI.Add(this);
						this._IDLavoro = value.IDLavoro;
					}
					else
					{
						this._IDLavoro = default(int);
					}
					this.SendPropertyChanged("LAVORI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_LAVORI_EFFETTUATI", Storage="_DIPENDENTI", ThisKey="IDManovale", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.LAVORI_EFFETTUATI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.LAVORI_EFFETTUATI.Add(this);
						this._IDManovale = value.IDDipendente;
					}
					else
					{
						this._IDManovale = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI_EFFETTUATI = this;
		}
		
		private void detach_MACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI_EFFETTUATI = null;
		}
		
		private void attach_STRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI_EFFETTUATI = this;
		}
		
		private void detach_STRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.LAVORI_EFFETTUATI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MACCHINARI")]
	public partial class MACCHINARI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumeroTelaio;
		
		private string _Marca;
		
		private string _Modello;
		
		private string _Targa;
		
		private System.DateTime _DataRevisione;
		
		private int _LivelloCarburante;
		
		private int _IDStruttura;
		
		private int _IDGarage;
		
		private EntitySet<MACCHINARI_UTILIZZATI> _MACCHINARI_UTILIZZATI;
		
		private EntitySet<PERMESSI_MACCHINARI> _PERMESSI_MACCHINARI;
		
		private EntityRef<GARAGE> _GARAGE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumeroTelaioChanging(string value);
    partial void OnNumeroTelaioChanged();
    partial void OnMarcaChanging(string value);
    partial void OnMarcaChanged();
    partial void OnModelloChanging(string value);
    partial void OnModelloChanged();
    partial void OnTargaChanging(string value);
    partial void OnTargaChanged();
    partial void OnDataRevisioneChanging(System.DateTime value);
    partial void OnDataRevisioneChanged();
    partial void OnLivelloCarburanteChanging(int value);
    partial void OnLivelloCarburanteChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDGarageChanging(int value);
    partial void OnIDGarageChanged();
    #endregion
		
		public MACCHINARI()
		{
			this._MACCHINARI_UTILIZZATI = new EntitySet<MACCHINARI_UTILIZZATI>(new Action<MACCHINARI_UTILIZZATI>(this.attach_MACCHINARI_UTILIZZATI), new Action<MACCHINARI_UTILIZZATI>(this.detach_MACCHINARI_UTILIZZATI));
			this._PERMESSI_MACCHINARI = new EntitySet<PERMESSI_MACCHINARI>(new Action<PERMESSI_MACCHINARI>(this.attach_PERMESSI_MACCHINARI), new Action<PERMESSI_MACCHINARI>(this.detach_PERMESSI_MACCHINARI));
			this._GARAGE = default(EntityRef<GARAGE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelaio", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumeroTelaio
		{
			get
			{
				return this._NumeroTelaio;
			}
			set
			{
				if ((this._NumeroTelaio != value))
				{
					this.OnNumeroTelaioChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelaio = value;
					this.SendPropertyChanged("NumeroTelaio");
					this.OnNumeroTelaioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Marca", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Marca
		{
			get
			{
				return this._Marca;
			}
			set
			{
				if ((this._Marca != value))
				{
					this.OnMarcaChanging(value);
					this.SendPropertyChanging();
					this._Marca = value;
					this.SendPropertyChanged("Marca");
					this.OnMarcaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Modello", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Modello
		{
			get
			{
				return this._Modello;
			}
			set
			{
				if ((this._Modello != value))
				{
					this.OnModelloChanging(value);
					this.SendPropertyChanging();
					this._Modello = value;
					this.SendPropertyChanged("Modello");
					this.OnModelloChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Targa", DbType="VarChar(50)")]
		public string Targa
		{
			get
			{
				return this._Targa;
			}
			set
			{
				if ((this._Targa != value))
				{
					this.OnTargaChanging(value);
					this.SendPropertyChanging();
					this._Targa = value;
					this.SendPropertyChanged("Targa");
					this.OnTargaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataRevisione", DbType="DateTime NOT NULL")]
		public System.DateTime DataRevisione
		{
			get
			{
				return this._DataRevisione;
			}
			set
			{
				if ((this._DataRevisione != value))
				{
					this.OnDataRevisioneChanging(value);
					this.SendPropertyChanging();
					this._DataRevisione = value;
					this.SendPropertyChanged("DataRevisione");
					this.OnDataRevisioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_LivelloCarburante", DbType="Int NOT NULL")]
		public int LivelloCarburante
		{
			get
			{
				return this._LivelloCarburante;
			}
			set
			{
				if ((this._LivelloCarburante != value))
				{
					this.OnLivelloCarburanteChanging(value);
					this.SendPropertyChanging();
					this._LivelloCarburante = value;
					this.SendPropertyChanged("LivelloCarburante");
					this.OnLivelloCarburanteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._GARAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGarage", DbType="Int NOT NULL")]
		public int IDGarage
		{
			get
			{
				return this._IDGarage;
			}
			set
			{
				if ((this._IDGarage != value))
				{
					if (this._GARAGE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGarageChanging(value);
					this.SendPropertyChanging();
					this._IDGarage = value;
					this.SendPropertyChanged("IDGarage");
					this.OnIDGarageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MACCHINARI_MACCHINARI_UTILIZZATI", Storage="_MACCHINARI_UTILIZZATI", ThisKey="NumeroTelaio", OtherKey="NumeroTelaio")]
		public EntitySet<MACCHINARI_UTILIZZATI> MACCHINARI_UTILIZZATI
		{
			get
			{
				return this._MACCHINARI_UTILIZZATI;
			}
			set
			{
				this._MACCHINARI_UTILIZZATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MACCHINARI_PERMESSI_MACCHINARI", Storage="_PERMESSI_MACCHINARI", ThisKey="NumeroTelaio", OtherKey="NumeroTelaio")]
		public EntitySet<PERMESSI_MACCHINARI> PERMESSI_MACCHINARI
		{
			get
			{
				return this._PERMESSI_MACCHINARI;
			}
			set
			{
				this._PERMESSI_MACCHINARI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="GARAGE_MACCHINARI", Storage="_GARAGE", ThisKey="IDStruttura,IDGarage", OtherKey="IDStruttura,IDGarage", IsForeignKey=true)]
		public GARAGE GARAGE
		{
			get
			{
				return this._GARAGE.Entity;
			}
			set
			{
				GARAGE previousValue = this._GARAGE.Entity;
				if (((previousValue != value) 
							|| (this._GARAGE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._GARAGE.Entity = null;
						previousValue.MACCHINARI.Remove(this);
					}
					this._GARAGE.Entity = value;
					if ((value != null))
					{
						value.MACCHINARI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDGarage = value.IDGarage;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDGarage = default(int);
					}
					this.SendPropertyChanged("GARAGE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_MACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.MACCHINARI = this;
		}
		
		private void detach_MACCHINARI_UTILIZZATI(MACCHINARI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.MACCHINARI = null;
		}
		
		private void attach_PERMESSI_MACCHINARI(PERMESSI_MACCHINARI entity)
		{
			this.SendPropertyChanging();
			entity.MACCHINARI = this;
		}
		
		private void detach_PERMESSI_MACCHINARI(PERMESSI_MACCHINARI entity)
		{
			this.SendPropertyChanging();
			entity.MACCHINARI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MACCHINARI_UTILIZZATI")]
	public partial class MACCHINARI_UTILIZZATI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLavoro;
		
		private int _IDLavoroEffettuato;
		
		private string _NumeroTelaio;
		
		private EntityRef<LAVORI_EFFETTUATI> _LAVORI_EFFETTUATI;
		
		private EntityRef<MACCHINARI> _MACCHINARI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLavoroChanging(int value);
    partial void OnIDLavoroChanged();
    partial void OnIDLavoroEffettuatoChanging(int value);
    partial void OnIDLavoroEffettuatoChanged();
    partial void OnNumeroTelaioChanging(string value);
    partial void OnNumeroTelaioChanged();
    #endregion
		
		public MACCHINARI_UTILIZZATI()
		{
			this._LAVORI_EFFETTUATI = default(EntityRef<LAVORI_EFFETTUATI>);
			this._MACCHINARI = default(EntityRef<MACCHINARI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLavoro
		{
			get
			{
				return this._IDLavoro;
			}
			set
			{
				if ((this._IDLavoro != value))
				{
					if (this._LAVORI_EFFETTUATI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLavoroChanging(value);
					this.SendPropertyChanging();
					this._IDLavoro = value;
					this.SendPropertyChanged("IDLavoro");
					this.OnIDLavoroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoroEffettuato", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLavoroEffettuato
		{
			get
			{
				return this._IDLavoroEffettuato;
			}
			set
			{
				if ((this._IDLavoroEffettuato != value))
				{
					if (this._LAVORI_EFFETTUATI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLavoroEffettuatoChanging(value);
					this.SendPropertyChanging();
					this._IDLavoroEffettuato = value;
					this.SendPropertyChanged("IDLavoroEffettuato");
					this.OnIDLavoroEffettuatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelaio", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumeroTelaio
		{
			get
			{
				return this._NumeroTelaio;
			}
			set
			{
				if ((this._NumeroTelaio != value))
				{
					if (this._MACCHINARI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroTelaioChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelaio = value;
					this.SendPropertyChanged("NumeroTelaio");
					this.OnNumeroTelaioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_EFFETTUATI_MACCHINARI_UTILIZZATI", Storage="_LAVORI_EFFETTUATI", ThisKey="IDLavoro,IDLavoroEffettuato", OtherKey="IDLavoro,IDLavoroEffettuato", IsForeignKey=true)]
		public LAVORI_EFFETTUATI LAVORI_EFFETTUATI
		{
			get
			{
				return this._LAVORI_EFFETTUATI.Entity;
			}
			set
			{
				LAVORI_EFFETTUATI previousValue = this._LAVORI_EFFETTUATI.Entity;
				if (((previousValue != value) 
							|| (this._LAVORI_EFFETTUATI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAVORI_EFFETTUATI.Entity = null;
						previousValue.MACCHINARI_UTILIZZATI.Remove(this);
					}
					this._LAVORI_EFFETTUATI.Entity = value;
					if ((value != null))
					{
						value.MACCHINARI_UTILIZZATI.Add(this);
						this._IDLavoro = value.IDLavoro;
						this._IDLavoroEffettuato = value.IDLavoroEffettuato;
					}
					else
					{
						this._IDLavoro = default(int);
						this._IDLavoroEffettuato = default(int);
					}
					this.SendPropertyChanged("LAVORI_EFFETTUATI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MACCHINARI_MACCHINARI_UTILIZZATI", Storage="_MACCHINARI", ThisKey="NumeroTelaio", OtherKey="NumeroTelaio", IsForeignKey=true)]
		public MACCHINARI MACCHINARI
		{
			get
			{
				return this._MACCHINARI.Entity;
			}
			set
			{
				MACCHINARI previousValue = this._MACCHINARI.Entity;
				if (((previousValue != value) 
							|| (this._MACCHINARI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MACCHINARI.Entity = null;
						previousValue.MACCHINARI_UTILIZZATI.Remove(this);
					}
					this._MACCHINARI.Entity = value;
					if ((value != null))
					{
						value.MACCHINARI_UTILIZZATI.Add(this);
						this._NumeroTelaio = value.NumeroTelaio;
					}
					else
					{
						this._NumeroTelaio = default(string);
					}
					this.SendPropertyChanged("MACCHINARI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MAGAZZINI")]
	public partial class MAGAZZINI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDMagazzino;
		
		private string _Nome;
		
		private int _Dimensione;
		
		private string _StoccaggioProdottiSensibili;
		
		private EntitySet<ACCESSI_INVENTARIO> _ACCESSI_INVENTARIO;
		
		private EntitySet<PRODOTTI> _PRODOTTI;
		
		private EntitySet<STRUMENTI_COMPLESSI> _STRUMENTI_COMPLESSI;
		
		private EntitySet<UTENSILI> _UTENSILI;
		
		private EntityRef<STRUTTURE> _STRUTTURE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(int value);
    partial void OnIDMagazzinoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDimensioneChanging(int value);
    partial void OnDimensioneChanged();
    partial void OnStoccaggioProdottiSensibiliChanging(string value);
    partial void OnStoccaggioProdottiSensibiliChanged();
    #endregion
		
		public MAGAZZINI()
		{
			this._ACCESSI_INVENTARIO = new EntitySet<ACCESSI_INVENTARIO>(new Action<ACCESSI_INVENTARIO>(this.attach_ACCESSI_INVENTARIO), new Action<ACCESSI_INVENTARIO>(this.detach_ACCESSI_INVENTARIO));
			this._PRODOTTI = new EntitySet<PRODOTTI>(new Action<PRODOTTI>(this.attach_PRODOTTI), new Action<PRODOTTI>(this.detach_PRODOTTI));
			this._STRUMENTI_COMPLESSI = new EntitySet<STRUMENTI_COMPLESSI>(new Action<STRUMENTI_COMPLESSI>(this.attach_STRUMENTI_COMPLESSI), new Action<STRUMENTI_COMPLESSI>(this.detach_STRUMENTI_COMPLESSI));
			this._UTENSILI = new EntitySet<UTENSILI>(new Action<UTENSILI>(this.attach_UTENSILI), new Action<UTENSILI>(this.detach_UTENSILI));
			this._STRUTTURE = default(EntityRef<STRUTTURE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUTTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensione", DbType="Int NOT NULL")]
		public int Dimensione
		{
			get
			{
				return this._Dimensione;
			}
			set
			{
				if ((this._Dimensione != value))
				{
					this.OnDimensioneChanging(value);
					this.SendPropertyChanging();
					this._Dimensione = value;
					this.SendPropertyChanged("Dimensione");
					this.OnDimensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StoccaggioProdottiSensibili", DbType="VarChar(50)")]
		public string StoccaggioProdottiSensibili
		{
			get
			{
				return this._StoccaggioProdottiSensibili;
			}
			set
			{
				if ((this._StoccaggioProdottiSensibili != value))
				{
					this.OnStoccaggioProdottiSensibiliChanging(value);
					this.SendPropertyChanging();
					this._StoccaggioProdottiSensibili = value;
					this.SendPropertyChanged("StoccaggioProdottiSensibili");
					this.OnStoccaggioProdottiSensibiliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_ACCESSI_INVENTARIO", Storage="_ACCESSI_INVENTARIO", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino")]
		public EntitySet<ACCESSI_INVENTARIO> ACCESSI_INVENTARIO
		{
			get
			{
				return this._ACCESSI_INVENTARIO;
			}
			set
			{
				this._ACCESSI_INVENTARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_PRODOTTI", Storage="_PRODOTTI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino")]
		public EntitySet<PRODOTTI> PRODOTTI
		{
			get
			{
				return this._PRODOTTI;
			}
			set
			{
				this._PRODOTTI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_STRUMENTI_COMPLESSI", Storage="_STRUMENTI_COMPLESSI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino")]
		public EntitySet<STRUMENTI_COMPLESSI> STRUMENTI_COMPLESSI
		{
			get
			{
				return this._STRUMENTI_COMPLESSI;
			}
			set
			{
				this._STRUMENTI_COMPLESSI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_UTENSILI", Storage="_UTENSILI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino")]
		public EntitySet<UTENSILI> UTENSILI
		{
			get
			{
				return this._UTENSILI;
			}
			set
			{
				this._UTENSILI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_MAGAZZINI", Storage="_STRUTTURE", ThisKey="IDStruttura", OtherKey="IDStruttura", IsForeignKey=true)]
		public STRUTTURE STRUTTURE
		{
			get
			{
				return this._STRUTTURE.Entity;
			}
			set
			{
				STRUTTURE previousValue = this._STRUTTURE.Entity;
				if (((previousValue != value) 
							|| (this._STRUTTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUTTURE.Entity = null;
						previousValue.MAGAZZINI.Remove(this);
					}
					this._STRUTTURE.Entity = value;
					if ((value != null))
					{
						value.MAGAZZINI.Add(this);
						this._IDStruttura = value.IDStruttura;
					}
					else
					{
						this._IDStruttura = default(int);
					}
					this.SendPropertyChanged("STRUTTURE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = this;
		}
		
		private void detach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = null;
		}
		
		private void attach_PRODOTTI(PRODOTTI entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = this;
		}
		
		private void detach_PRODOTTI(PRODOTTI entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = null;
		}
		
		private void attach_STRUMENTI_COMPLESSI(STRUMENTI_COMPLESSI entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = this;
		}
		
		private void detach_STRUMENTI_COMPLESSI(STRUMENTI_COMPLESSI entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = null;
		}
		
		private void attach_UTENSILI(UTENSILI entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = this;
		}
		
		private void detach_UTENSILI(UTENSILI entity)
		{
			this.SendPropertyChanging();
			entity.MAGAZZINI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.MANUTENZIONI")]
	public partial class MANUTENZIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDManutentore;
		
		private System.DateTime _DataOra;
		
		private string _Descrizione;
		
		private int _IDStruttura;
		
		private int _IDSerra;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
		private EntityRef<SERRE> _SERRE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDManutentoreChanging(int value);
    partial void OnIDManutentoreChanged();
    partial void OnDataOraChanging(System.DateTime value);
    partial void OnDataOraChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(int value);
    partial void OnIDSerraChanged();
    #endregion
		
		public MANUTENZIONI()
		{
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			this._SERRE = default(EntityRef<SERRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManutentore", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDManutentore
		{
			get
			{
				return this._IDManutentore;
			}
			set
			{
				if ((this._IDManutentore != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDManutentoreChanging(value);
					this.SendPropertyChanging();
					this._IDManutentore = value;
					this.SendPropertyChanged("IDManutentore");
					this.OnIDManutentoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOra", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataOra
		{
			get
			{
				return this._DataOra;
			}
			set
			{
				if ((this._DataOra != value))
				{
					this.OnDataOraChanging(value);
					this.SendPropertyChanging();
					this._DataOra = value;
					this.SendPropertyChanged("DataOra");
					this.OnDataOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(200) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int NOT NULL")]
		public int IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_MANUTENZIONI", Storage="_DIPENDENTI", ThisKey="IDManutentore", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.MANUTENZIONI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.MANUTENZIONI.Add(this);
						this._IDManutentore = value.IDDipendente;
					}
					else
					{
						this._IDManutentore = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_MANUTENZIONI", Storage="_SERRE", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra", IsForeignKey=true)]
		public SERRE SERRE
		{
			get
			{
				return this._SERRE.Entity;
			}
			set
			{
				SERRE previousValue = this._SERRE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE.Entity = null;
						previousValue.MANUTENZIONI.Remove(this);
					}
					this._SERRE.Entity = value;
					if ((value != null))
					{
						value.MANUTENZIONI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerra = value.IDSerra;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerra = default(int);
					}
					this.SendPropertyChanged("SERRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMESSI")]
	public partial class PERMESSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPermesso;
		
		private string _Tipo;
		
		private System.DateTime _DataCreazione;
		
		private string _Validità;
		
		private int _IDSupervisoreConcedente;
		
		private System.Nullable<int> _IDStruttura;
		
		private System.Nullable<int> _IDSerra;
		
		private System.Nullable<int> _IDRicercatore;
		
		private EntityRef<PERMESSI_MACCHINARI> _PERMESSI_MACCHINARI;
		
		private EntityRef<PERMESSI_MANOVALI> _PERMESSI_MANOVALI;
		
		private EntityRef<PERMESSI_STRUMENTI_COMPLESSI> _PERMESSI_STRUMENTI_COMPLESSI;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
		private EntityRef<RICERCATORI> _RICERCATORI;
		
		private EntityRef<SERRE> _SERRE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPermessoChanging(int value);
    partial void OnIDPermessoChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    partial void OnDataCreazioneChanging(System.DateTime value);
    partial void OnDataCreazioneChanged();
    partial void OnValiditàChanging(string value);
    partial void OnValiditàChanged();
    partial void OnIDSupervisoreConcedenteChanging(int value);
    partial void OnIDSupervisoreConcedenteChanged();
    partial void OnIDStrutturaChanging(System.Nullable<int> value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(System.Nullable<int> value);
    partial void OnIDSerraChanged();
    partial void OnIDRicercatoreChanging(System.Nullable<int> value);
    partial void OnIDRicercatoreChanged();
    #endregion
		
		public PERMESSI()
		{
			this._PERMESSI_MACCHINARI = default(EntityRef<PERMESSI_MACCHINARI>);
			this._PERMESSI_MANOVALI = default(EntityRef<PERMESSI_MANOVALI>);
			this._PERMESSI_STRUMENTI_COMPLESSI = default(EntityRef<PERMESSI_STRUMENTI_COMPLESSI>);
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			this._RICERCATORI = default(EntityRef<RICERCATORI>);
			this._SERRE = default(EntityRef<SERRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPermesso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPermesso
		{
			get
			{
				return this._IDPermesso;
			}
			set
			{
				if ((this._IDPermesso != value))
				{
					this.OnIDPermessoChanging(value);
					this.SendPropertyChanging();
					this._IDPermesso = value;
					this.SendPropertyChanged("IDPermesso");
					this.OnIDPermessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataCreazione", DbType="DateTime NOT NULL")]
		public System.DateTime DataCreazione
		{
			get
			{
				return this._DataCreazione;
			}
			set
			{
				if ((this._DataCreazione != value))
				{
					this.OnDataCreazioneChanging(value);
					this.SendPropertyChanging();
					this._DataCreazione = value;
					this.SendPropertyChanged("DataCreazione");
					this.OnDataCreazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Validità", DbType="VarChar(10) NOT NULL", CanBeNull=false)]
		public string Validità
		{
			get
			{
				return this._Validità;
			}
			set
			{
				if ((this._Validità != value))
				{
					this.OnValiditàChanging(value);
					this.SendPropertyChanging();
					this._Validità = value;
					this.SendPropertyChanged("Validità");
					this.OnValiditàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSupervisoreConcedente", DbType="Int NOT NULL")]
		public int IDSupervisoreConcedente
		{
			get
			{
				return this._IDSupervisoreConcedente;
			}
			set
			{
				if ((this._IDSupervisoreConcedente != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSupervisoreConcedenteChanging(value);
					this.SendPropertyChanging();
					this._IDSupervisoreConcedente = value;
					this.SendPropertyChanged("IDSupervisoreConcedente");
					this.OnIDSupervisoreConcedenteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int")]
		public System.Nullable<int> IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int")]
		public System.Nullable<int> IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRicercatore", DbType="Int")]
		public System.Nullable<int> IDRicercatore
		{
			get
			{
				return this._IDRicercatore;
			}
			set
			{
				if ((this._IDRicercatore != value))
				{
					if (this._RICERCATORI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRicercatoreChanging(value);
					this.SendPropertyChanging();
					this._IDRicercatore = value;
					this.SendPropertyChanged("IDRicercatore");
					this.OnIDRicercatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMESSI_PERMESSI_MACCHINARI", Storage="_PERMESSI_MACCHINARI", ThisKey="IDPermesso", OtherKey="IDPermesso", IsUnique=true, IsForeignKey=false)]
		public PERMESSI_MACCHINARI PERMESSI_MACCHINARI
		{
			get
			{
				return this._PERMESSI_MACCHINARI.Entity;
			}
			set
			{
				PERMESSI_MACCHINARI previousValue = this._PERMESSI_MACCHINARI.Entity;
				if (((previousValue != value) 
							|| (this._PERMESSI_MACCHINARI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMESSI_MACCHINARI.Entity = null;
						previousValue.PERMESSI = null;
					}
					this._PERMESSI_MACCHINARI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI = this;
					}
					this.SendPropertyChanged("PERMESSI_MACCHINARI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMESSI_PERMESSI_MANOVALI", Storage="_PERMESSI_MANOVALI", ThisKey="IDPermesso", OtherKey="IDPermesso", IsUnique=true, IsForeignKey=false)]
		public PERMESSI_MANOVALI PERMESSI_MANOVALI
		{
			get
			{
				return this._PERMESSI_MANOVALI.Entity;
			}
			set
			{
				PERMESSI_MANOVALI previousValue = this._PERMESSI_MANOVALI.Entity;
				if (((previousValue != value) 
							|| (this._PERMESSI_MANOVALI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMESSI_MANOVALI.Entity = null;
						previousValue.PERMESSI = null;
					}
					this._PERMESSI_MANOVALI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI = this;
					}
					this.SendPropertyChanged("PERMESSI_MANOVALI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMESSI_PERMESSI_STRUMENTI_COMPLESSI", Storage="_PERMESSI_STRUMENTI_COMPLESSI", ThisKey="IDPermesso", OtherKey="IDPermesso", IsUnique=true, IsForeignKey=false)]
		public PERMESSI_STRUMENTI_COMPLESSI PERMESSI_STRUMENTI_COMPLESSI
		{
			get
			{
				return this._PERMESSI_STRUMENTI_COMPLESSI.Entity;
			}
			set
			{
				PERMESSI_STRUMENTI_COMPLESSI previousValue = this._PERMESSI_STRUMENTI_COMPLESSI.Entity;
				if (((previousValue != value) 
							|| (this._PERMESSI_STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMESSI_STRUMENTI_COMPLESSI.Entity = null;
						previousValue.PERMESSI = null;
					}
					this._PERMESSI_STRUMENTI_COMPLESSI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI = this;
					}
					this.SendPropertyChanged("PERMESSI_STRUMENTI_COMPLESSI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_PERMESSI", Storage="_DIPENDENTI", ThisKey="IDSupervisoreConcedente", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.PERMESSI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI.Add(this);
						this._IDSupervisoreConcedente = value.IDDipendente;
					}
					else
					{
						this._IDSupervisoreConcedente = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_PERMESSI", Storage="_RICERCATORI", ThisKey="IDRicercatore", OtherKey="IDRicercatore", IsForeignKey=true)]
		public RICERCATORI RICERCATORI
		{
			get
			{
				return this._RICERCATORI.Entity;
			}
			set
			{
				RICERCATORI previousValue = this._RICERCATORI.Entity;
				if (((previousValue != value) 
							|| (this._RICERCATORI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RICERCATORI.Entity = null;
						previousValue.PERMESSI.Remove(this);
					}
					this._RICERCATORI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI.Add(this);
						this._IDRicercatore = value.IDRicercatore;
					}
					else
					{
						this._IDRicercatore = default(Nullable<int>);
					}
					this.SendPropertyChanged("RICERCATORI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_PERMESSI", Storage="_SERRE", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra", IsForeignKey=true)]
		public SERRE SERRE
		{
			get
			{
				return this._SERRE.Entity;
			}
			set
			{
				SERRE previousValue = this._SERRE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE.Entity = null;
						previousValue.PERMESSI.Remove(this);
					}
					this._SERRE.Entity = value;
					if ((value != null))
					{
						value.PERMESSI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerra = value.IDSerra;
					}
					else
					{
						this._IDStruttura = default(Nullable<int>);
						this._IDSerra = default(Nullable<int>);
					}
					this.SendPropertyChanged("SERRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMESSI_MACCHINARI")]
	public partial class PERMESSI_MACCHINARI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPermesso;
		
		private string _NumeroTelaio;
		
		private EntityRef<MACCHINARI> _MACCHINARI;
		
		private EntityRef<PERMESSI> _PERMESSI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPermessoChanging(int value);
    partial void OnIDPermessoChanged();
    partial void OnNumeroTelaioChanging(string value);
    partial void OnNumeroTelaioChanged();
    #endregion
		
		public PERMESSI_MACCHINARI()
		{
			this._MACCHINARI = default(EntityRef<MACCHINARI>);
			this._PERMESSI = default(EntityRef<PERMESSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPermesso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPermesso
		{
			get
			{
				return this._IDPermesso;
			}
			set
			{
				if ((this._IDPermesso != value))
				{
					if (this._PERMESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPermessoChanging(value);
					this.SendPropertyChanging();
					this._IDPermesso = value;
					this.SendPropertyChanged("IDPermesso");
					this.OnIDPermessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroTelaio", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NumeroTelaio
		{
			get
			{
				return this._NumeroTelaio;
			}
			set
			{
				if ((this._NumeroTelaio != value))
				{
					if (this._MACCHINARI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumeroTelaioChanging(value);
					this.SendPropertyChanging();
					this._NumeroTelaio = value;
					this.SendPropertyChanged("NumeroTelaio");
					this.OnNumeroTelaioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MACCHINARI_PERMESSI_MACCHINARI", Storage="_MACCHINARI", ThisKey="NumeroTelaio", OtherKey="NumeroTelaio", IsForeignKey=true)]
		public MACCHINARI MACCHINARI
		{
			get
			{
				return this._MACCHINARI.Entity;
			}
			set
			{
				MACCHINARI previousValue = this._MACCHINARI.Entity;
				if (((previousValue != value) 
							|| (this._MACCHINARI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MACCHINARI.Entity = null;
						previousValue.PERMESSI_MACCHINARI.Remove(this);
					}
					this._MACCHINARI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI_MACCHINARI.Add(this);
						this._NumeroTelaio = value.NumeroTelaio;
					}
					else
					{
						this._NumeroTelaio = default(string);
					}
					this.SendPropertyChanged("MACCHINARI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMESSI_PERMESSI_MACCHINARI", Storage="_PERMESSI", ThisKey="IDPermesso", OtherKey="IDPermesso", IsForeignKey=true)]
		public PERMESSI PERMESSI
		{
			get
			{
				return this._PERMESSI.Entity;
			}
			set
			{
				PERMESSI previousValue = this._PERMESSI.Entity;
				if (((previousValue != value) 
							|| (this._PERMESSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMESSI.Entity = null;
						previousValue.PERMESSI_MACCHINARI = null;
					}
					this._PERMESSI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI_MACCHINARI = this;
						this._IDPermesso = value.IDPermesso;
					}
					else
					{
						this._IDPermesso = default(int);
					}
					this.SendPropertyChanged("PERMESSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMESSI_MANOVALI")]
	public partial class PERMESSI_MANOVALI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPermesso;
		
		private int _IDManovale;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
		private EntityRef<PERMESSI> _PERMESSI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPermessoChanging(int value);
    partial void OnIDPermessoChanged();
    partial void OnIDManovaleChanging(int value);
    partial void OnIDManovaleChanged();
    #endregion
		
		public PERMESSI_MANOVALI()
		{
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			this._PERMESSI = default(EntityRef<PERMESSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPermesso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPermesso
		{
			get
			{
				return this._IDPermesso;
			}
			set
			{
				if ((this._IDPermesso != value))
				{
					if (this._PERMESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPermessoChanging(value);
					this.SendPropertyChanging();
					this._IDPermesso = value;
					this.SendPropertyChanged("IDPermesso");
					this.OnIDPermessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDManovale", DbType="Int NOT NULL")]
		public int IDManovale
		{
			get
			{
				return this._IDManovale;
			}
			set
			{
				if ((this._IDManovale != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDManovaleChanging(value);
					this.SendPropertyChanging();
					this._IDManovale = value;
					this.SendPropertyChanged("IDManovale");
					this.OnIDManovaleChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_PERMESSI_MANOVALI", Storage="_DIPENDENTI", ThisKey="IDManovale", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.PERMESSI_MANOVALI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI_MANOVALI.Add(this);
						this._IDManovale = value.IDDipendente;
					}
					else
					{
						this._IDManovale = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMESSI_PERMESSI_MANOVALI", Storage="_PERMESSI", ThisKey="IDPermesso", OtherKey="IDPermesso", IsForeignKey=true)]
		public PERMESSI PERMESSI
		{
			get
			{
				return this._PERMESSI.Entity;
			}
			set
			{
				PERMESSI previousValue = this._PERMESSI.Entity;
				if (((previousValue != value) 
							|| (this._PERMESSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMESSI.Entity = null;
						previousValue.PERMESSI_MANOVALI = null;
					}
					this._PERMESSI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI_MANOVALI = this;
						this._IDPermesso = value.IDPermesso;
					}
					else
					{
						this._IDPermesso = default(int);
					}
					this.SendPropertyChanged("PERMESSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PERMESSI_STRUMENTI_COMPLESSI")]
	public partial class PERMESSI_STRUMENTI_COMPLESSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPermesso;
		
		private int _IDStruttura;
		
		private int _IDMagazzino;
		
		private int _IDStrumentoComplesso;
		
		private EntityRef<PERMESSI> _PERMESSI;
		
		private EntityRef<STRUMENTI_COMPLESSI> _STRUMENTI_COMPLESSI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPermessoChanging(int value);
    partial void OnIDPermessoChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(int value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDStrumentoComplessoChanging(int value);
    partial void OnIDStrumentoComplessoChanged();
    #endregion
		
		public PERMESSI_STRUMENTI_COMPLESSI()
		{
			this._PERMESSI = default(EntityRef<PERMESSI>);
			this._STRUMENTI_COMPLESSI = default(EntityRef<STRUMENTI_COMPLESSI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPermesso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPermesso
		{
			get
			{
				return this._IDPermesso;
			}
			set
			{
				if ((this._IDPermesso != value))
				{
					if (this._PERMESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPermessoChanging(value);
					this.SendPropertyChanging();
					this._IDPermesso = value;
					this.SendPropertyChanged("IDPermesso");
					this.OnIDPermessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int NOT NULL")]
		public int IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStrumentoComplesso", DbType="Int NOT NULL")]
		public int IDStrumentoComplesso
		{
			get
			{
				return this._IDStrumentoComplesso;
			}
			set
			{
				if ((this._IDStrumentoComplesso != value))
				{
					if (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrumentoComplessoChanging(value);
					this.SendPropertyChanging();
					this._IDStrumentoComplesso = value;
					this.SendPropertyChanged("IDStrumentoComplesso");
					this.OnIDStrumentoComplessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PERMESSI_PERMESSI_STRUMENTI_COMPLESSI", Storage="_PERMESSI", ThisKey="IDPermesso", OtherKey="IDPermesso", IsForeignKey=true)]
		public PERMESSI PERMESSI
		{
			get
			{
				return this._PERMESSI.Entity;
			}
			set
			{
				PERMESSI previousValue = this._PERMESSI.Entity;
				if (((previousValue != value) 
							|| (this._PERMESSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PERMESSI.Entity = null;
						previousValue.PERMESSI_STRUMENTI_COMPLESSI = null;
					}
					this._PERMESSI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI_STRUMENTI_COMPLESSI = this;
						this._IDPermesso = value.IDPermesso;
					}
					else
					{
						this._IDPermesso = default(int);
					}
					this.SendPropertyChanged("PERMESSI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUMENTI_COMPLESSI_PERMESSI_STRUMENTI_COMPLESSI", Storage="_STRUMENTI_COMPLESSI", ThisKey="IDStruttura,IDMagazzino,IDStrumentoComplesso", OtherKey="IDStruttura,IDMagazzino,IDStrumentoComplesso", IsForeignKey=true)]
		public STRUMENTI_COMPLESSI STRUMENTI_COMPLESSI
		{
			get
			{
				return this._STRUMENTI_COMPLESSI.Entity;
			}
			set
			{
				STRUMENTI_COMPLESSI previousValue = this._STRUMENTI_COMPLESSI.Entity;
				if (((previousValue != value) 
							|| (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUMENTI_COMPLESSI.Entity = null;
						previousValue.PERMESSI_STRUMENTI_COMPLESSI.Remove(this);
					}
					this._STRUMENTI_COMPLESSI.Entity = value;
					if ((value != null))
					{
						value.PERMESSI_STRUMENTI_COMPLESSI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
						this._IDStrumentoComplesso = value.IDStrumentoComplesso;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDMagazzino = default(int);
						this._IDStrumentoComplesso = default(int);
					}
					this.SendPropertyChanged("STRUMENTI_COMPLESSI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PIANTE")]
	public partial class PIANTE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPianta;
		
		private string _Razza;
		
		private string _Varietà;
		
		private int _UnitàOccupate;
		
		private EntitySet<CLUSTER_EMBRIONI> _CLUSTER_EMBRIONI;
		
		private EntitySet<CLUSTER_PIANTE> _CLUSTER_PIANTE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPiantaChanging(int value);
    partial void OnIDPiantaChanged();
    partial void OnRazzaChanging(string value);
    partial void OnRazzaChanged();
    partial void OnVarietàChanging(string value);
    partial void OnVarietàChanged();
    partial void OnUnitàOccupateChanging(int value);
    partial void OnUnitàOccupateChanged();
    #endregion
		
		public PIANTE()
		{
			this._CLUSTER_EMBRIONI = new EntitySet<CLUSTER_EMBRIONI>(new Action<CLUSTER_EMBRIONI>(this.attach_CLUSTER_EMBRIONI), new Action<CLUSTER_EMBRIONI>(this.detach_CLUSTER_EMBRIONI));
			this._CLUSTER_PIANTE = new EntitySet<CLUSTER_PIANTE>(new Action<CLUSTER_PIANTE>(this.attach_CLUSTER_PIANTE), new Action<CLUSTER_PIANTE>(this.detach_CLUSTER_PIANTE));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPianta", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDPianta
		{
			get
			{
				return this._IDPianta;
			}
			set
			{
				if ((this._IDPianta != value))
				{
					this.OnIDPiantaChanging(value);
					this.SendPropertyChanging();
					this._IDPianta = value;
					this.SendPropertyChanged("IDPianta");
					this.OnIDPiantaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Razza", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Razza
		{
			get
			{
				return this._Razza;
			}
			set
			{
				if ((this._Razza != value))
				{
					this.OnRazzaChanging(value);
					this.SendPropertyChanging();
					this._Razza = value;
					this.SendPropertyChanged("Razza");
					this.OnRazzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Varietà", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Varietà
		{
			get
			{
				return this._Varietà;
			}
			set
			{
				if ((this._Varietà != value))
				{
					this.OnVarietàChanging(value);
					this.SendPropertyChanging();
					this._Varietà = value;
					this.SendPropertyChanged("Varietà");
					this.OnVarietàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UnitàOccupate", DbType="Int NOT NULL")]
		public int UnitàOccupate
		{
			get
			{
				return this._UnitàOccupate;
			}
			set
			{
				if ((this._UnitàOccupate != value))
				{
					this.OnUnitàOccupateChanging(value);
					this.SendPropertyChanging();
					this._UnitàOccupate = value;
					this.SendPropertyChanged("UnitàOccupate");
					this.OnUnitàOccupateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PIANTE_CLUSTER_EMBRIONI", Storage="_CLUSTER_EMBRIONI", ThisKey="IDPianta", OtherKey="IDPianta")]
		public EntitySet<CLUSTER_EMBRIONI> CLUSTER_EMBRIONI
		{
			get
			{
				return this._CLUSTER_EMBRIONI;
			}
			set
			{
				this._CLUSTER_EMBRIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PIANTE_CLUSTER_PIANTE", Storage="_CLUSTER_PIANTE", ThisKey="IDPianta", OtherKey="IDPianta")]
		public EntitySet<CLUSTER_PIANTE> CLUSTER_PIANTE
		{
			get
			{
				return this._CLUSTER_PIANTE;
			}
			set
			{
				this._CLUSTER_PIANTE.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CLUSTER_EMBRIONI(CLUSTER_EMBRIONI entity)
		{
			this.SendPropertyChanging();
			entity.PIANTE = this;
		}
		
		private void detach_CLUSTER_EMBRIONI(CLUSTER_EMBRIONI entity)
		{
			this.SendPropertyChanging();
			entity.PIANTE = null;
		}
		
		private void attach_CLUSTER_PIANTE(CLUSTER_PIANTE entity)
		{
			this.SendPropertyChanging();
			entity.PIANTE = this;
		}
		
		private void detach_CLUSTER_PIANTE(CLUSTER_PIANTE entity)
		{
			this.SendPropertyChanging();
			entity.PIANTE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PRODOTTI")]
	public partial class PRODOTTI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDMagazzino;
		
		private int _IDProdotto;
		
		private string _Nome;
		
		private string _Tipologia;
		
		private string _PrincipioAttivo;
		
		private float _Diluizione;
		
		private int _GiorniEffetto;
		
		private string _Sensibile;
		
		private int _Quantità;
		
		private EntitySet<LAVORI> _LAVORI;
		
		private EntityRef<MAGAZZINI> _MAGAZZINI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(int value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDProdottoChanging(int value);
    partial void OnIDProdottoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTipologiaChanging(string value);
    partial void OnTipologiaChanged();
    partial void OnPrincipioAttivoChanging(string value);
    partial void OnPrincipioAttivoChanged();
    partial void OnDiluizioneChanging(float value);
    partial void OnDiluizioneChanged();
    partial void OnGiorniEffettoChanging(int value);
    partial void OnGiorniEffettoChanged();
    partial void OnSensibileChanging(string value);
    partial void OnSensibileChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    #endregion
		
		public PRODOTTI()
		{
			this._LAVORI = new EntitySet<LAVORI>(new Action<LAVORI>(this.attach_LAVORI), new Action<LAVORI>(this.detach_LAVORI));
			this._MAGAZZINI = default(EntityRef<MAGAZZINI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProdotto", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDProdotto
		{
			get
			{
				return this._IDProdotto;
			}
			set
			{
				if ((this._IDProdotto != value))
				{
					this.OnIDProdottoChanging(value);
					this.SendPropertyChanging();
					this._IDProdotto = value;
					this.SendPropertyChanged("IDProdotto");
					this.OnIDProdottoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipologia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Tipologia
		{
			get
			{
				return this._Tipologia;
			}
			set
			{
				if ((this._Tipologia != value))
				{
					this.OnTipologiaChanging(value);
					this.SendPropertyChanging();
					this._Tipologia = value;
					this.SendPropertyChanged("Tipologia");
					this.OnTipologiaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrincipioAttivo", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string PrincipioAttivo
		{
			get
			{
				return this._PrincipioAttivo;
			}
			set
			{
				if ((this._PrincipioAttivo != value))
				{
					this.OnPrincipioAttivoChanging(value);
					this.SendPropertyChanging();
					this._PrincipioAttivo = value;
					this.SendPropertyChanged("PrincipioAttivo");
					this.OnPrincipioAttivoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Diluizione", DbType="Real NOT NULL")]
		public float Diluizione
		{
			get
			{
				return this._Diluizione;
			}
			set
			{
				if ((this._Diluizione != value))
				{
					this.OnDiluizioneChanging(value);
					this.SendPropertyChanging();
					this._Diluizione = value;
					this.SendPropertyChanged("Diluizione");
					this.OnDiluizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_GiorniEffetto", DbType="Int NOT NULL")]
		public int GiorniEffetto
		{
			get
			{
				return this._GiorniEffetto;
			}
			set
			{
				if ((this._GiorniEffetto != value))
				{
					this.OnGiorniEffettoChanging(value);
					this.SendPropertyChanging();
					this._GiorniEffetto = value;
					this.SendPropertyChanged("GiorniEffetto");
					this.OnGiorniEffettoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Sensibile", DbType="VarChar(15)")]
		public string Sensibile
		{
			get
			{
				return this._Sensibile;
			}
			set
			{
				if ((this._Sensibile != value))
				{
					this.OnSensibileChanging(value);
					this.SendPropertyChanging();
					this._Sensibile = value;
					this.SendPropertyChanged("Sensibile");
					this.OnSensibileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PRODOTTI_LAVORI", Storage="_LAVORI", ThisKey="IDStruttura,IDMagazzino,IDProdotto", OtherKey="IDStruttura,IDMagazzino,IDProdotto")]
		public EntitySet<LAVORI> LAVORI
		{
			get
			{
				return this._LAVORI;
			}
			set
			{
				this._LAVORI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_PRODOTTI", Storage="_MAGAZZINI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino", IsForeignKey=true)]
		public MAGAZZINI MAGAZZINI
		{
			get
			{
				return this._MAGAZZINI.Entity;
			}
			set
			{
				MAGAZZINI previousValue = this._MAGAZZINI.Entity;
				if (((previousValue != value) 
							|| (this._MAGAZZINI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAGAZZINI.Entity = null;
						previousValue.PRODOTTI.Remove(this);
					}
					this._MAGAZZINI.Entity = value;
					if ((value != null))
					{
						value.PRODOTTI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDMagazzino = default(int);
					}
					this.SendPropertyChanged("MAGAZZINI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_LAVORI(LAVORI entity)
		{
			this.SendPropertyChanging();
			entity.PRODOTTI = this;
		}
		
		private void detach_LAVORI(LAVORI entity)
		{
			this.SendPropertyChanging();
			entity.PRODOTTI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RICERCATORI")]
	public partial class RICERCATORI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRicercatore;
		
		private string _CF;
		
		private string _Nome;
		
		private string _Cognome;
		
		private string _Provincia;
		
		private string _CAP;
		
		private string _Via;
		
		private string _NumeroCivico;
		
		private string _Telefono;
		
		private string _Mail;
		
		private string _Competenza;
		
		private string _Dipartimento;
		
		private string _NomeUniversità;
		
		private EntitySet<ANNOTAZIONI> _ANNOTAZIONI;
		
		private EntitySet<COLLABORAZIONI> _COLLABORAZIONI;
		
		private EntitySet<ESPERIMENTI> _ESPERIMENTI;
		
		private EntitySet<PERMESSI> _PERMESSI;
		
		private EntityRef<UNIVERSITÀ> _UNIVERSITÀ;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRicercatoreChanging(int value);
    partial void OnIDRicercatoreChanged();
    partial void OnCFChanging(string value);
    partial void OnCFChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnCognomeChanging(string value);
    partial void OnCognomeChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroCivicoChanging(string value);
    partial void OnNumeroCivicoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnCompetenzaChanging(string value);
    partial void OnCompetenzaChanged();
    partial void OnDipartimentoChanging(string value);
    partial void OnDipartimentoChanged();
    partial void OnNomeUniversitàChanging(string value);
    partial void OnNomeUniversitàChanged();
    #endregion
		
		public RICERCATORI()
		{
			this._ANNOTAZIONI = new EntitySet<ANNOTAZIONI>(new Action<ANNOTAZIONI>(this.attach_ANNOTAZIONI), new Action<ANNOTAZIONI>(this.detach_ANNOTAZIONI));
			this._COLLABORAZIONI = new EntitySet<COLLABORAZIONI>(new Action<COLLABORAZIONI>(this.attach_COLLABORAZIONI), new Action<COLLABORAZIONI>(this.detach_COLLABORAZIONI));
			this._ESPERIMENTI = new EntitySet<ESPERIMENTI>(new Action<ESPERIMENTI>(this.attach_ESPERIMENTI), new Action<ESPERIMENTI>(this.detach_ESPERIMENTI));
			this._PERMESSI = new EntitySet<PERMESSI>(new Action<PERMESSI>(this.attach_PERMESSI), new Action<PERMESSI>(this.detach_PERMESSI));
			this._UNIVERSITÀ = default(EntityRef<UNIVERSITÀ>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRicercatore", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDRicercatore
		{
			get
			{
				return this._IDRicercatore;
			}
			set
			{
				if ((this._IDRicercatore != value))
				{
					this.OnIDRicercatoreChanging(value);
					this.SendPropertyChanging();
					this._IDRicercatore = value;
					this.SendPropertyChanged("IDRicercatore");
					this.OnIDRicercatoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CF", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CF
		{
			get
			{
				return this._CF;
			}
			set
			{
				if ((this._CF != value))
				{
					this.OnCFChanging(value);
					this.SendPropertyChanging();
					this._CF = value;
					this.SendPropertyChanged("CF");
					this.OnCFChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Cognome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Cognome
		{
			get
			{
				return this._Cognome;
			}
			set
			{
				if ((this._Cognome != value))
				{
					this.OnCognomeChanging(value);
					this.SendPropertyChanging();
					this._Cognome = value;
					this.SendPropertyChanged("Cognome");
					this.OnCognomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCivico", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NumeroCivico
		{
			get
			{
				return this._NumeroCivico;
			}
			set
			{
				if ((this._NumeroCivico != value))
				{
					this.OnNumeroCivicoChanging(value);
					this.SendPropertyChanging();
					this._NumeroCivico = value;
					this.SendPropertyChanged("NumeroCivico");
					this.OnNumeroCivicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Competenza", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Competenza
		{
			get
			{
				return this._Competenza;
			}
			set
			{
				if ((this._Competenza != value))
				{
					this.OnCompetenzaChanging(value);
					this.SendPropertyChanging();
					this._Competenza = value;
					this.SendPropertyChanged("Competenza");
					this.OnCompetenzaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dipartimento", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Dipartimento
		{
			get
			{
				return this._Dipartimento;
			}
			set
			{
				if ((this._Dipartimento != value))
				{
					this.OnDipartimentoChanging(value);
					this.SendPropertyChanging();
					this._Dipartimento = value;
					this.SendPropertyChanged("Dipartimento");
					this.OnDipartimentoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NomeUniversità", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string NomeUniversità
		{
			get
			{
				return this._NomeUniversità;
			}
			set
			{
				if ((this._NomeUniversità != value))
				{
					if (this._UNIVERSITÀ.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNomeUniversitàChanging(value);
					this.SendPropertyChanging();
					this._NomeUniversità = value;
					this.SendPropertyChanged("NomeUniversità");
					this.OnNomeUniversitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_ANNOTAZIONI", Storage="_ANNOTAZIONI", ThisKey="IDRicercatore", OtherKey="IDRicercatore")]
		public EntitySet<ANNOTAZIONI> ANNOTAZIONI
		{
			get
			{
				return this._ANNOTAZIONI;
			}
			set
			{
				this._ANNOTAZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_COLLABORAZIONI", Storage="_COLLABORAZIONI", ThisKey="IDRicercatore", OtherKey="IDRicercatore")]
		public EntitySet<COLLABORAZIONI> COLLABORAZIONI
		{
			get
			{
				return this._COLLABORAZIONI;
			}
			set
			{
				this._COLLABORAZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_ESPERIMENTI", Storage="_ESPERIMENTI", ThisKey="IDRicercatore", OtherKey="IDRicercatoreCapo")]
		public EntitySet<ESPERIMENTI> ESPERIMENTI
		{
			get
			{
				return this._ESPERIMENTI;
			}
			set
			{
				this._ESPERIMENTI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RICERCATORI_PERMESSI", Storage="_PERMESSI", ThisKey="IDRicercatore", OtherKey="IDRicercatore")]
		public EntitySet<PERMESSI> PERMESSI
		{
			get
			{
				return this._PERMESSI;
			}
			set
			{
				this._PERMESSI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UNIVERSITÀ_RICERCATORI", Storage="_UNIVERSITÀ", ThisKey="NomeUniversità", OtherKey="Nome", IsForeignKey=true)]
		public UNIVERSITÀ UNIVERSITÀ
		{
			get
			{
				return this._UNIVERSITÀ.Entity;
			}
			set
			{
				UNIVERSITÀ previousValue = this._UNIVERSITÀ.Entity;
				if (((previousValue != value) 
							|| (this._UNIVERSITÀ.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._UNIVERSITÀ.Entity = null;
						previousValue.RICERCATORI.Remove(this);
					}
					this._UNIVERSITÀ.Entity = value;
					if ((value != null))
					{
						value.RICERCATORI.Add(this);
						this._NomeUniversità = value.Nome;
					}
					else
					{
						this._NomeUniversità = default(string);
					}
					this.SendPropertyChanged("UNIVERSITÀ");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ANNOTAZIONI(ANNOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = this;
		}
		
		private void detach_ANNOTAZIONI(ANNOTAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = null;
		}
		
		private void attach_COLLABORAZIONI(COLLABORAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = this;
		}
		
		private void detach_COLLABORAZIONI(COLLABORAZIONI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = null;
		}
		
		private void attach_ESPERIMENTI(ESPERIMENTI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = this;
		}
		
		private void detach_ESPERIMENTI(ESPERIMENTI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = null;
		}
		
		private void attach_PERMESSI(PERMESSI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = this;
		}
		
		private void detach_PERMESSI(PERMESSI entity)
		{
			this.SendPropertyChanging();
			entity.RICERCATORI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERRE")]
	public partial class SERRE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDSerra;
		
		private int _Area;
		
		private int _NumeroUnitàMassime;
		
		private int _NumeroUnitàOccupate;
		
		private int _IDClima;
		
		private EntitySet<CLUSTER> _CLUSTER;
		
		private EntitySet<MANUTENZIONI> _MANUTENZIONI;
		
		private EntitySet<PERMESSI> _PERMESSI;
		
		private EntitySet<SUPERVISIONI> _SUPERVISIONI;
		
		private EntitySet<VISITE> _VISITE;
		
		private EntityRef<CLIMI> _CLIMI;
		
		private EntityRef<STRUTTURE> _STRUTTURE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(int value);
    partial void OnIDSerraChanged();
    partial void OnAreaChanging(int value);
    partial void OnAreaChanged();
    partial void OnNumeroUnitàMassimeChanging(int value);
    partial void OnNumeroUnitàMassimeChanged();
    partial void OnNumeroUnitàOccupateChanging(int value);
    partial void OnNumeroUnitàOccupateChanged();
    partial void OnIDClimaChanging(int value);
    partial void OnIDClimaChanged();
    #endregion
		
		public SERRE()
		{
			this._CLUSTER = new EntitySet<CLUSTER>(new Action<CLUSTER>(this.attach_CLUSTER), new Action<CLUSTER>(this.detach_CLUSTER));
			this._MANUTENZIONI = new EntitySet<MANUTENZIONI>(new Action<MANUTENZIONI>(this.attach_MANUTENZIONI), new Action<MANUTENZIONI>(this.detach_MANUTENZIONI));
			this._PERMESSI = new EntitySet<PERMESSI>(new Action<PERMESSI>(this.attach_PERMESSI), new Action<PERMESSI>(this.detach_PERMESSI));
			this._SUPERVISIONI = new EntitySet<SUPERVISIONI>(new Action<SUPERVISIONI>(this.attach_SUPERVISIONI), new Action<SUPERVISIONI>(this.detach_SUPERVISIONI));
			this._VISITE = new EntitySet<VISITE>(new Action<VISITE>(this.attach_VISITE), new Action<VISITE>(this.detach_VISITE));
			this._CLIMI = default(EntityRef<CLIMI>);
			this._STRUTTURE = default(EntityRef<STRUTTURE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUTTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Area", DbType="Int NOT NULL")]
		public int Area
		{
			get
			{
				return this._Area;
			}
			set
			{
				if ((this._Area != value))
				{
					this.OnAreaChanging(value);
					this.SendPropertyChanging();
					this._Area = value;
					this.SendPropertyChanged("Area");
					this.OnAreaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroUnitàMassime", DbType="Int NOT NULL")]
		public int NumeroUnitàMassime
		{
			get
			{
				return this._NumeroUnitàMassime;
			}
			set
			{
				if ((this._NumeroUnitàMassime != value))
				{
					this.OnNumeroUnitàMassimeChanging(value);
					this.SendPropertyChanging();
					this._NumeroUnitàMassime = value;
					this.SendPropertyChanged("NumeroUnitàMassime");
					this.OnNumeroUnitàMassimeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroUnitàOccupate", DbType="Int NOT NULL")]
		public int NumeroUnitàOccupate
		{
			get
			{
				return this._NumeroUnitàOccupate;
			}
			set
			{
				if ((this._NumeroUnitàOccupate != value))
				{
					this.OnNumeroUnitàOccupateChanging(value);
					this.SendPropertyChanging();
					this._NumeroUnitàOccupate = value;
					this.SendPropertyChanged("NumeroUnitàOccupate");
					this.OnNumeroUnitàOccupateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDClima", DbType="Int NOT NULL")]
		public int IDClima
		{
			get
			{
				return this._IDClima;
			}
			set
			{
				if ((this._IDClima != value))
				{
					if (this._CLIMI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDClimaChanging(value);
					this.SendPropertyChanging();
					this._IDClima = value;
					this.SendPropertyChanged("IDClima");
					this.OnIDClimaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_CLUSTER", Storage="_CLUSTER", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra")]
		public EntitySet<CLUSTER> CLUSTER
		{
			get
			{
				return this._CLUSTER;
			}
			set
			{
				this._CLUSTER.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_MANUTENZIONI", Storage="_MANUTENZIONI", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra")]
		public EntitySet<MANUTENZIONI> MANUTENZIONI
		{
			get
			{
				return this._MANUTENZIONI;
			}
			set
			{
				this._MANUTENZIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_PERMESSI", Storage="_PERMESSI", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra")]
		public EntitySet<PERMESSI> PERMESSI
		{
			get
			{
				return this._PERMESSI;
			}
			set
			{
				this._PERMESSI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_SUPERVISIONI", Storage="_SUPERVISIONI", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra")]
		public EntitySet<SUPERVISIONI> SUPERVISIONI
		{
			get
			{
				return this._SUPERVISIONI;
			}
			set
			{
				this._SUPERVISIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_VISITE", Storage="_VISITE", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra")]
		public EntitySet<VISITE> VISITE
		{
			get
			{
				return this._VISITE;
			}
			set
			{
				this._VISITE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CLIMI_SERRE", Storage="_CLIMI", ThisKey="IDClima", OtherKey="IDClima", IsForeignKey=true)]
		public CLIMI CLIMI
		{
			get
			{
				return this._CLIMI.Entity;
			}
			set
			{
				CLIMI previousValue = this._CLIMI.Entity;
				if (((previousValue != value) 
							|| (this._CLIMI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CLIMI.Entity = null;
						previousValue.SERRE.Remove(this);
					}
					this._CLIMI.Entity = value;
					if ((value != null))
					{
						value.SERRE.Add(this);
						this._IDClima = value.IDClima;
					}
					else
					{
						this._IDClima = default(int);
					}
					this.SendPropertyChanged("CLIMI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_SERRE", Storage="_STRUTTURE", ThisKey="IDStruttura", OtherKey="IDStruttura", IsForeignKey=true)]
		public STRUTTURE STRUTTURE
		{
			get
			{
				return this._STRUTTURE.Entity;
			}
			set
			{
				STRUTTURE previousValue = this._STRUTTURE.Entity;
				if (((previousValue != value) 
							|| (this._STRUTTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUTTURE.Entity = null;
						previousValue.SERRE.Remove(this);
					}
					this._STRUTTURE.Entity = value;
					if ((value != null))
					{
						value.SERRE.Add(this);
						this._IDStruttura = value.IDStruttura;
					}
					else
					{
						this._IDStruttura = default(int);
					}
					this.SendPropertyChanged("STRUTTURE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CLUSTER(CLUSTER entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = this;
		}
		
		private void detach_CLUSTER(CLUSTER entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = null;
		}
		
		private void attach_MANUTENZIONI(MANUTENZIONI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = this;
		}
		
		private void detach_MANUTENZIONI(MANUTENZIONI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = null;
		}
		
		private void attach_PERMESSI(PERMESSI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = this;
		}
		
		private void detach_PERMESSI(PERMESSI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = null;
		}
		
		private void attach_SUPERVISIONI(SUPERVISIONI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = this;
		}
		
		private void detach_SUPERVISIONI(SUPERVISIONI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = null;
		}
		
		private void attach_VISITE(VISITE entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = this;
		}
		
		private void detach_VISITE(VISITE entity)
		{
			this.SendPropertyChanging();
			entity.SERRE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SERRE_INCUBAZIONE")]
	public partial class SERRE_INCUBAZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDSerraIncubazione;
		
		private string _Nome;
		
		private int _Dimensione;
		
		private int _ClusterOspitabili;
		
		private int _ClusterPresenti;
		
		private EntitySet<ACCESSI_INVENTARIO> _ACCESSI_INVENTARIO;
		
		private EntitySet<CLUSTER_EMBRIONI> _CLUSTER_EMBRIONI;
		
		private EntityRef<STRUTTURE> _STRUTTURE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraIncubazioneChanging(int value);
    partial void OnIDSerraIncubazioneChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDimensioneChanging(int value);
    partial void OnDimensioneChanged();
    partial void OnClusterOspitabiliChanging(int value);
    partial void OnClusterOspitabiliChanged();
    partial void OnClusterPresentiChanging(int value);
    partial void OnClusterPresentiChanged();
    #endregion
		
		public SERRE_INCUBAZIONE()
		{
			this._ACCESSI_INVENTARIO = new EntitySet<ACCESSI_INVENTARIO>(new Action<ACCESSI_INVENTARIO>(this.attach_ACCESSI_INVENTARIO), new Action<ACCESSI_INVENTARIO>(this.detach_ACCESSI_INVENTARIO));
			this._CLUSTER_EMBRIONI = new EntitySet<CLUSTER_EMBRIONI>(new Action<CLUSTER_EMBRIONI>(this.attach_CLUSTER_EMBRIONI), new Action<CLUSTER_EMBRIONI>(this.detach_CLUSTER_EMBRIONI));
			this._STRUTTURE = default(EntityRef<STRUTTURE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUTTURE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerraIncubazione", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSerraIncubazione
		{
			get
			{
				return this._IDSerraIncubazione;
			}
			set
			{
				if ((this._IDSerraIncubazione != value))
				{
					this.OnIDSerraIncubazioneChanging(value);
					this.SendPropertyChanging();
					this._IDSerraIncubazione = value;
					this.SendPropertyChanged("IDSerraIncubazione");
					this.OnIDSerraIncubazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Dimensione", DbType="Int NOT NULL")]
		public int Dimensione
		{
			get
			{
				return this._Dimensione;
			}
			set
			{
				if ((this._Dimensione != value))
				{
					this.OnDimensioneChanging(value);
					this.SendPropertyChanging();
					this._Dimensione = value;
					this.SendPropertyChanged("Dimensione");
					this.OnDimensioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClusterOspitabili", DbType="Int NOT NULL")]
		public int ClusterOspitabili
		{
			get
			{
				return this._ClusterOspitabili;
			}
			set
			{
				if ((this._ClusterOspitabili != value))
				{
					this.OnClusterOspitabiliChanging(value);
					this.SendPropertyChanging();
					this._ClusterOspitabili = value;
					this.SendPropertyChanged("ClusterOspitabili");
					this.OnClusterOspitabiliChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ClusterPresenti", DbType="Int NOT NULL")]
		public int ClusterPresenti
		{
			get
			{
				return this._ClusterPresenti;
			}
			set
			{
				if ((this._ClusterPresenti != value))
				{
					this.OnClusterPresentiChanging(value);
					this.SendPropertyChanging();
					this._ClusterPresenti = value;
					this.SendPropertyChanged("ClusterPresenti");
					this.OnClusterPresentiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_INCUBAZIONE_ACCESSI_INVENTARIO", Storage="_ACCESSI_INVENTARIO", ThisKey="IDStruttura,IDSerraIncubazione", OtherKey="IDStruttura,IDSerraIncubazione")]
		public EntitySet<ACCESSI_INVENTARIO> ACCESSI_INVENTARIO
		{
			get
			{
				return this._ACCESSI_INVENTARIO;
			}
			set
			{
				this._ACCESSI_INVENTARIO.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_INCUBAZIONE_CLUSTER_EMBRIONI", Storage="_CLUSTER_EMBRIONI", ThisKey="IDStruttura,IDSerraIncubazione", OtherKey="IDStruttura,IDSerraIncubazione")]
		public EntitySet<CLUSTER_EMBRIONI> CLUSTER_EMBRIONI
		{
			get
			{
				return this._CLUSTER_EMBRIONI;
			}
			set
			{
				this._CLUSTER_EMBRIONI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_SERRE_INCUBAZIONE", Storage="_STRUTTURE", ThisKey="IDStruttura", OtherKey="IDStruttura", IsForeignKey=true)]
		public STRUTTURE STRUTTURE
		{
			get
			{
				return this._STRUTTURE.Entity;
			}
			set
			{
				STRUTTURE previousValue = this._STRUTTURE.Entity;
				if (((previousValue != value) 
							|| (this._STRUTTURE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUTTURE.Entity = null;
						previousValue.SERRE_INCUBAZIONE.Remove(this);
					}
					this._STRUTTURE.Entity = value;
					if ((value != null))
					{
						value.SERRE_INCUBAZIONE.Add(this);
						this._IDStruttura = value.IDStruttura;
					}
					else
					{
						this._IDStruttura = default(int);
					}
					this.SendPropertyChanged("STRUTTURE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.SERRE_INCUBAZIONE = this;
		}
		
		private void detach_ACCESSI_INVENTARIO(ACCESSI_INVENTARIO entity)
		{
			this.SendPropertyChanging();
			entity.SERRE_INCUBAZIONE = null;
		}
		
		private void attach_CLUSTER_EMBRIONI(CLUSTER_EMBRIONI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE_INCUBAZIONE = this;
		}
		
		private void detach_CLUSTER_EMBRIONI(CLUSTER_EMBRIONI entity)
		{
			this.SendPropertyChanging();
			entity.SERRE_INCUBAZIONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STRUMENTI_COMPLESSI")]
	public partial class STRUMENTI_COMPLESSI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDMagazzino;
		
		private int _IDStrumentoComplesso;
		
		private string _Nome;
		
		private string _Alimentazione;
		
		private int _Quantità;
		
		private EntitySet<PERMESSI_STRUMENTI_COMPLESSI> _PERMESSI_STRUMENTI_COMPLESSI;
		
		private EntitySet<STRUMENTI_COMPLESSI_UTILIZZATI> _STRUMENTI_COMPLESSI_UTILIZZATI;
		
		private EntityRef<MAGAZZINI> _MAGAZZINI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(int value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDStrumentoComplessoChanging(int value);
    partial void OnIDStrumentoComplessoChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnAlimentazioneChanging(string value);
    partial void OnAlimentazioneChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    #endregion
		
		public STRUMENTI_COMPLESSI()
		{
			this._PERMESSI_STRUMENTI_COMPLESSI = new EntitySet<PERMESSI_STRUMENTI_COMPLESSI>(new Action<PERMESSI_STRUMENTI_COMPLESSI>(this.attach_PERMESSI_STRUMENTI_COMPLESSI), new Action<PERMESSI_STRUMENTI_COMPLESSI>(this.detach_PERMESSI_STRUMENTI_COMPLESSI));
			this._STRUMENTI_COMPLESSI_UTILIZZATI = new EntitySet<STRUMENTI_COMPLESSI_UTILIZZATI>(new Action<STRUMENTI_COMPLESSI_UTILIZZATI>(this.attach_STRUMENTI_COMPLESSI_UTILIZZATI), new Action<STRUMENTI_COMPLESSI_UTILIZZATI>(this.detach_STRUMENTI_COMPLESSI_UTILIZZATI));
			this._MAGAZZINI = default(EntityRef<MAGAZZINI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStrumentoComplesso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStrumentoComplesso
		{
			get
			{
				return this._IDStrumentoComplesso;
			}
			set
			{
				if ((this._IDStrumentoComplesso != value))
				{
					this.OnIDStrumentoComplessoChanging(value);
					this.SendPropertyChanging();
					this._IDStrumentoComplesso = value;
					this.SendPropertyChanged("IDStrumentoComplesso");
					this.OnIDStrumentoComplessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Alimentazione", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Alimentazione
		{
			get
			{
				return this._Alimentazione;
			}
			set
			{
				if ((this._Alimentazione != value))
				{
					this.OnAlimentazioneChanging(value);
					this.SendPropertyChanging();
					this._Alimentazione = value;
					this.SendPropertyChanged("Alimentazione");
					this.OnAlimentazioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUMENTI_COMPLESSI_PERMESSI_STRUMENTI_COMPLESSI", Storage="_PERMESSI_STRUMENTI_COMPLESSI", ThisKey="IDStruttura,IDMagazzino,IDStrumentoComplesso", OtherKey="IDStruttura,IDMagazzino,IDStrumentoComplesso")]
		public EntitySet<PERMESSI_STRUMENTI_COMPLESSI> PERMESSI_STRUMENTI_COMPLESSI
		{
			get
			{
				return this._PERMESSI_STRUMENTI_COMPLESSI;
			}
			set
			{
				this._PERMESSI_STRUMENTI_COMPLESSI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUMENTI_COMPLESSI_STRUMENTI_COMPLESSI_UTILIZZATI", Storage="_STRUMENTI_COMPLESSI_UTILIZZATI", ThisKey="IDStruttura,IDMagazzino,IDStrumentoComplesso", OtherKey="IDStruttura,IDMagazzino,IDStrumentoComplesso")]
		public EntitySet<STRUMENTI_COMPLESSI_UTILIZZATI> STRUMENTI_COMPLESSI_UTILIZZATI
		{
			get
			{
				return this._STRUMENTI_COMPLESSI_UTILIZZATI;
			}
			set
			{
				this._STRUMENTI_COMPLESSI_UTILIZZATI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_STRUMENTI_COMPLESSI", Storage="_MAGAZZINI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino", IsForeignKey=true)]
		public MAGAZZINI MAGAZZINI
		{
			get
			{
				return this._MAGAZZINI.Entity;
			}
			set
			{
				MAGAZZINI previousValue = this._MAGAZZINI.Entity;
				if (((previousValue != value) 
							|| (this._MAGAZZINI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAGAZZINI.Entity = null;
						previousValue.STRUMENTI_COMPLESSI.Remove(this);
					}
					this._MAGAZZINI.Entity = value;
					if ((value != null))
					{
						value.STRUMENTI_COMPLESSI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDMagazzino = default(int);
					}
					this.SendPropertyChanged("MAGAZZINI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_PERMESSI_STRUMENTI_COMPLESSI(PERMESSI_STRUMENTI_COMPLESSI entity)
		{
			this.SendPropertyChanging();
			entity.STRUMENTI_COMPLESSI = this;
		}
		
		private void detach_PERMESSI_STRUMENTI_COMPLESSI(PERMESSI_STRUMENTI_COMPLESSI entity)
		{
			this.SendPropertyChanging();
			entity.STRUMENTI_COMPLESSI = null;
		}
		
		private void attach_STRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.STRUMENTI_COMPLESSI = this;
		}
		
		private void detach_STRUMENTI_COMPLESSI_UTILIZZATI(STRUMENTI_COMPLESSI_UTILIZZATI entity)
		{
			this.SendPropertyChanging();
			entity.STRUMENTI_COMPLESSI = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STRUMENTI_COMPLESSI_UTILIZZATI")]
	public partial class STRUMENTI_COMPLESSI_UTILIZZATI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDLavoro;
		
		private int _IDLavoroEffettuato;
		
		private int _IDStruttura;
		
		private int _IDMagazzino;
		
		private int _IDStrumentoComplesso;
		
		private EntityRef<STRUMENTI_COMPLESSI> _STRUMENTI_COMPLESSI;
		
		private EntityRef<LAVORI_EFFETTUATI> _LAVORI_EFFETTUATI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDLavoroChanging(int value);
    partial void OnIDLavoroChanged();
    partial void OnIDLavoroEffettuatoChanging(int value);
    partial void OnIDLavoroEffettuatoChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(int value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDStrumentoComplessoChanging(int value);
    partial void OnIDStrumentoComplessoChanged();
    #endregion
		
		public STRUMENTI_COMPLESSI_UTILIZZATI()
		{
			this._STRUMENTI_COMPLESSI = default(EntityRef<STRUMENTI_COMPLESSI>);
			this._LAVORI_EFFETTUATI = default(EntityRef<LAVORI_EFFETTUATI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoro", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLavoro
		{
			get
			{
				return this._IDLavoro;
			}
			set
			{
				if ((this._IDLavoro != value))
				{
					if (this._LAVORI_EFFETTUATI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLavoroChanging(value);
					this.SendPropertyChanging();
					this._IDLavoro = value;
					this.SendPropertyChanged("IDLavoro");
					this.OnIDLavoroChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDLavoroEffettuato", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDLavoroEffettuato
		{
			get
			{
				return this._IDLavoroEffettuato;
			}
			set
			{
				if ((this._IDLavoroEffettuato != value))
				{
					if (this._LAVORI_EFFETTUATI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDLavoroEffettuatoChanging(value);
					this.SendPropertyChanging();
					this._IDLavoroEffettuato = value;
					this.SendPropertyChanged("IDLavoroEffettuato");
					this.OnIDLavoroEffettuatoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStrumentoComplesso", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStrumentoComplesso
		{
			get
			{
				return this._IDStrumentoComplesso;
			}
			set
			{
				if ((this._IDStrumentoComplesso != value))
				{
					if (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrumentoComplessoChanging(value);
					this.SendPropertyChanging();
					this._IDStrumentoComplesso = value;
					this.SendPropertyChanged("IDStrumentoComplesso");
					this.OnIDStrumentoComplessoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUMENTI_COMPLESSI_STRUMENTI_COMPLESSI_UTILIZZATI", Storage="_STRUMENTI_COMPLESSI", ThisKey="IDStruttura,IDMagazzino,IDStrumentoComplesso", OtherKey="IDStruttura,IDMagazzino,IDStrumentoComplesso", IsForeignKey=true)]
		public STRUMENTI_COMPLESSI STRUMENTI_COMPLESSI
		{
			get
			{
				return this._STRUMENTI_COMPLESSI.Entity;
			}
			set
			{
				STRUMENTI_COMPLESSI previousValue = this._STRUMENTI_COMPLESSI.Entity;
				if (((previousValue != value) 
							|| (this._STRUMENTI_COMPLESSI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STRUMENTI_COMPLESSI.Entity = null;
						previousValue.STRUMENTI_COMPLESSI_UTILIZZATI.Remove(this);
					}
					this._STRUMENTI_COMPLESSI.Entity = value;
					if ((value != null))
					{
						value.STRUMENTI_COMPLESSI_UTILIZZATI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
						this._IDStrumentoComplesso = value.IDStrumentoComplesso;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDMagazzino = default(int);
						this._IDStrumentoComplesso = default(int);
					}
					this.SendPropertyChanged("STRUMENTI_COMPLESSI");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="LAVORI_EFFETTUATI_STRUMENTI_COMPLESSI_UTILIZZATI", Storage="_LAVORI_EFFETTUATI", ThisKey="IDLavoro,IDLavoroEffettuato", OtherKey="IDLavoro,IDLavoroEffettuato", IsForeignKey=true)]
		public LAVORI_EFFETTUATI LAVORI_EFFETTUATI
		{
			get
			{
				return this._LAVORI_EFFETTUATI.Entity;
			}
			set
			{
				LAVORI_EFFETTUATI previousValue = this._LAVORI_EFFETTUATI.Entity;
				if (((previousValue != value) 
							|| (this._LAVORI_EFFETTUATI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._LAVORI_EFFETTUATI.Entity = null;
						previousValue.STRUMENTI_COMPLESSI_UTILIZZATI.Remove(this);
					}
					this._LAVORI_EFFETTUATI.Entity = value;
					if ((value != null))
					{
						value.STRUMENTI_COMPLESSI_UTILIZZATI.Add(this);
						this._IDLavoro = value.IDLavoro;
						this._IDLavoroEffettuato = value.IDLavoroEffettuato;
					}
					else
					{
						this._IDLavoro = default(int);
						this._IDLavoroEffettuato = default(int);
					}
					this.SendPropertyChanged("LAVORI_EFFETTUATI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STRUTTURE")]
	public partial class STRUTTURE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private string _Nome;
		
		private string _Provincia;
		
		private string _CAP;
		
		private string _Via;
		
		private string _NumeroCivico;
		
		private string _Telefono;
		
		private System.DateTime _DataInizioGestione;
		
		private int _IDDirettore;
		
		private EntitySet<CONTRATTI> _CONTRATTI;
		
		private EntitySet<GARAGE> _GARAGE;
		
		private EntitySet<MAGAZZINI> _MAGAZZINI;
		
		private EntitySet<SERRE> _SERRE;
		
		private EntitySet<SERRE_INCUBAZIONE> _SERRE_INCUBAZIONE;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroCivicoChanging(string value);
    partial void OnNumeroCivicoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnDataInizioGestioneChanging(System.DateTime value);
    partial void OnDataInizioGestioneChanged();
    partial void OnIDDirettoreChanging(int value);
    partial void OnIDDirettoreChanged();
    #endregion
		
		public STRUTTURE()
		{
			this._CONTRATTI = new EntitySet<CONTRATTI>(new Action<CONTRATTI>(this.attach_CONTRATTI), new Action<CONTRATTI>(this.detach_CONTRATTI));
			this._GARAGE = new EntitySet<GARAGE>(new Action<GARAGE>(this.attach_GARAGE), new Action<GARAGE>(this.detach_GARAGE));
			this._MAGAZZINI = new EntitySet<MAGAZZINI>(new Action<MAGAZZINI>(this.attach_MAGAZZINI), new Action<MAGAZZINI>(this.detach_MAGAZZINI));
			this._SERRE = new EntitySet<SERRE>(new Action<SERRE>(this.attach_SERRE), new Action<SERRE>(this.detach_SERRE));
			this._SERRE_INCUBAZIONE = new EntitySet<SERRE_INCUBAZIONE>(new Action<SERRE_INCUBAZIONE>(this.attach_SERRE_INCUBAZIONE), new Action<SERRE_INCUBAZIONE>(this.detach_SERRE_INCUBAZIONE));
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCivico", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NumeroCivico
		{
			get
			{
				return this._NumeroCivico;
			}
			set
			{
				if ((this._NumeroCivico != value))
				{
					this.OnNumeroCivicoChanging(value);
					this.SendPropertyChanging();
					this._NumeroCivico = value;
					this.SendPropertyChanged("NumeroCivico");
					this.OnNumeroCivicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizioGestione", DbType="DateTime NOT NULL")]
		public System.DateTime DataInizioGestione
		{
			get
			{
				return this._DataInizioGestione;
			}
			set
			{
				if ((this._DataInizioGestione != value))
				{
					this.OnDataInizioGestioneChanging(value);
					this.SendPropertyChanging();
					this._DataInizioGestione = value;
					this.SendPropertyChanged("DataInizioGestione");
					this.OnDataInizioGestioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDDirettore", DbType="Int NOT NULL")]
		public int IDDirettore
		{
			get
			{
				return this._IDDirettore;
			}
			set
			{
				if ((this._IDDirettore != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDDirettoreChanging(value);
					this.SendPropertyChanging();
					this._IDDirettore = value;
					this.SendPropertyChanged("IDDirettore");
					this.OnIDDirettoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_CONTRATTI", Storage="_CONTRATTI", ThisKey="IDStruttura", OtherKey="IDStruttura")]
		public EntitySet<CONTRATTI> CONTRATTI
		{
			get
			{
				return this._CONTRATTI;
			}
			set
			{
				this._CONTRATTI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_GARAGE", Storage="_GARAGE", ThisKey="IDStruttura", OtherKey="IDStruttura")]
		public EntitySet<GARAGE> GARAGE
		{
			get
			{
				return this._GARAGE;
			}
			set
			{
				this._GARAGE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_MAGAZZINI", Storage="_MAGAZZINI", ThisKey="IDStruttura", OtherKey="IDStruttura")]
		public EntitySet<MAGAZZINI> MAGAZZINI
		{
			get
			{
				return this._MAGAZZINI;
			}
			set
			{
				this._MAGAZZINI.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_SERRE", Storage="_SERRE", ThisKey="IDStruttura", OtherKey="IDStruttura")]
		public EntitySet<SERRE> SERRE
		{
			get
			{
				return this._SERRE;
			}
			set
			{
				this._SERRE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STRUTTURE_SERRE_INCUBAZIONE", Storage="_SERRE_INCUBAZIONE", ThisKey="IDStruttura", OtherKey="IDStruttura")]
		public EntitySet<SERRE_INCUBAZIONE> SERRE_INCUBAZIONE
		{
			get
			{
				return this._SERRE_INCUBAZIONE;
			}
			set
			{
				this._SERRE_INCUBAZIONE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_STRUTTURE", Storage="_DIPENDENTI", ThisKey="IDDirettore", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.STRUTTURE.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.STRUTTURE.Add(this);
						this._IDDirettore = value.IDDipendente;
					}
					else
					{
						this._IDDirettore = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_CONTRATTI(CONTRATTI entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = this;
		}
		
		private void detach_CONTRATTI(CONTRATTI entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = null;
		}
		
		private void attach_GARAGE(GARAGE entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = this;
		}
		
		private void detach_GARAGE(GARAGE entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = null;
		}
		
		private void attach_MAGAZZINI(MAGAZZINI entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = this;
		}
		
		private void detach_MAGAZZINI(MAGAZZINI entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = null;
		}
		
		private void attach_SERRE(SERRE entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = this;
		}
		
		private void detach_SERRE(SERRE entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = null;
		}
		
		private void attach_SERRE_INCUBAZIONE(SERRE_INCUBAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = this;
		}
		
		private void detach_SERRE_INCUBAZIONE(SERRE_INCUBAZIONE entity)
		{
			this.SendPropertyChanging();
			entity.STRUTTURE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.SUPERVISIONI")]
	public partial class SUPERVISIONI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDSupervisore;
		
		private System.DateTime _DataInizio;
		
		private System.DateTime _DataFine;
		
		private int _IDStruttura;
		
		private int _IDSerra;
		
		private EntityRef<SERRE> _SERRE;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDSupervisoreChanging(int value);
    partial void OnIDSupervisoreChanged();
    partial void OnDataInizioChanging(System.DateTime value);
    partial void OnDataInizioChanged();
    partial void OnDataFineChanging(System.DateTime value);
    partial void OnDataFineChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(int value);
    partial void OnIDSerraChanged();
    #endregion
		
		public SUPERVISIONI()
		{
			this._SERRE = default(EntityRef<SERRE>);
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSupervisore", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDSupervisore
		{
			get
			{
				return this._IDSupervisore;
			}
			set
			{
				if ((this._IDSupervisore != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSupervisoreChanging(value);
					this.SendPropertyChanging();
					this._IDSupervisore = value;
					this.SendPropertyChanged("IDSupervisore");
					this.OnIDSupervisoreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataInizio", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataInizio
		{
			get
			{
				return this._DataInizio;
			}
			set
			{
				if ((this._DataInizio != value))
				{
					this.OnDataInizioChanging(value);
					this.SendPropertyChanging();
					this._DataInizio = value;
					this.SendPropertyChanged("DataInizio");
					this.OnDataInizioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataFine", DbType="DateTime NOT NULL")]
		public System.DateTime DataFine
		{
			get
			{
				return this._DataFine;
			}
			set
			{
				if ((this._DataFine != value))
				{
					this.OnDataFineChanging(value);
					this.SendPropertyChanging();
					this._DataFine = value;
					this.SendPropertyChanged("DataFine");
					this.OnDataFineChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int NOT NULL")]
		public int IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_SUPERVISIONI", Storage="_SERRE", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra", IsForeignKey=true)]
		public SERRE SERRE
		{
			get
			{
				return this._SERRE.Entity;
			}
			set
			{
				SERRE previousValue = this._SERRE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE.Entity = null;
						previousValue.SUPERVISIONI.Remove(this);
					}
					this._SERRE.Entity = value;
					if ((value != null))
					{
						value.SUPERVISIONI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerra = value.IDSerra;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerra = default(int);
					}
					this.SendPropertyChanged("SERRE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_SUPERVISIONI", Storage="_DIPENDENTI", ThisKey="IDSupervisore", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.SUPERVISIONI.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.SUPERVISIONI.Add(this);
						this._IDSupervisore = value.IDDipendente;
					}
					else
					{
						this._IDSupervisore = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UNIVERSITÀ")]
	public partial class UNIVERSITÀ : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Nome;
		
		private string _Telefono;
		
		private string _FAX;
		
		private string _Mail;
		
		private string _Provincia;
		
		private string _CAP;
		
		private string _Via;
		
		private string _NumeroCivico;
		
		private EntitySet<RICERCATORI> _RICERCATORI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnFAXChanging(string value);
    partial void OnFAXChanged();
    partial void OnMailChanging(string value);
    partial void OnMailChanged();
    partial void OnProvinciaChanging(string value);
    partial void OnProvinciaChanged();
    partial void OnCAPChanging(string value);
    partial void OnCAPChanged();
    partial void OnViaChanging(string value);
    partial void OnViaChanged();
    partial void OnNumeroCivicoChanging(string value);
    partial void OnNumeroCivicoChanged();
    #endregion
		
		public UNIVERSITÀ()
		{
			this._RICERCATORI = new EntitySet<RICERCATORI>(new Action<RICERCATORI>(this.attach_RICERCATORI), new Action<RICERCATORI>(this.detach_RICERCATORI));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FAX", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string FAX
		{
			get
			{
				return this._FAX;
			}
			set
			{
				if ((this._FAX != value))
				{
					this.OnFAXChanging(value);
					this.SendPropertyChanging();
					this._FAX = value;
					this.SendPropertyChanged("FAX");
					this.OnFAXChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Mail", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Mail
		{
			get
			{
				return this._Mail;
			}
			set
			{
				if ((this._Mail != value))
				{
					this.OnMailChanging(value);
					this.SendPropertyChanging();
					this._Mail = value;
					this.SendPropertyChanged("Mail");
					this.OnMailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Provincia", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Provincia
		{
			get
			{
				return this._Provincia;
			}
			set
			{
				if ((this._Provincia != value))
				{
					this.OnProvinciaChanging(value);
					this.SendPropertyChanging();
					this._Provincia = value;
					this.SendPropertyChanged("Provincia");
					this.OnProvinciaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CAP", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string CAP
		{
			get
			{
				return this._CAP;
			}
			set
			{
				if ((this._CAP != value))
				{
					this.OnCAPChanging(value);
					this.SendPropertyChanging();
					this._CAP = value;
					this.SendPropertyChanged("CAP");
					this.OnCAPChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Via", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Via
		{
			get
			{
				return this._Via;
			}
			set
			{
				if ((this._Via != value))
				{
					this.OnViaChanging(value);
					this.SendPropertyChanging();
					this._Via = value;
					this.SendPropertyChanged("Via");
					this.OnViaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroCivico", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string NumeroCivico
		{
			get
			{
				return this._NumeroCivico;
			}
			set
			{
				if ((this._NumeroCivico != value))
				{
					this.OnNumeroCivicoChanging(value);
					this.SendPropertyChanging();
					this._NumeroCivico = value;
					this.SendPropertyChanged("NumeroCivico");
					this.OnNumeroCivicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="UNIVERSITÀ_RICERCATORI", Storage="_RICERCATORI", ThisKey="Nome", OtherKey="NomeUniversità")]
		public EntitySet<RICERCATORI> RICERCATORI
		{
			get
			{
				return this._RICERCATORI;
			}
			set
			{
				this._RICERCATORI.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RICERCATORI(RICERCATORI entity)
		{
			this.SendPropertyChanging();
			entity.UNIVERSITÀ = this;
		}
		
		private void detach_RICERCATORI(RICERCATORI entity)
		{
			this.SendPropertyChanging();
			entity.UNIVERSITÀ = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.UTENSILI")]
	public partial class UTENSILI : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDStruttura;
		
		private int _IDMagazzino;
		
		private int _IDUtensile;
		
		private string _Nome;
		
		private string _Descrizione;
		
		private int _Quantità;
		
		private EntityRef<MAGAZZINI> _MAGAZZINI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDMagazzinoChanging(int value);
    partial void OnIDMagazzinoChanged();
    partial void OnIDUtensileChanging(int value);
    partial void OnIDUtensileChanged();
    partial void OnNomeChanging(string value);
    partial void OnNomeChanged();
    partial void OnDescrizioneChanging(string value);
    partial void OnDescrizioneChanged();
    partial void OnQuantitàChanging(int value);
    partial void OnQuantitàChanged();
    #endregion
		
		public UTENSILI()
		{
			this._MAGAZZINI = default(EntityRef<MAGAZZINI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDMagazzino", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDMagazzino
		{
			get
			{
				return this._IDMagazzino;
			}
			set
			{
				if ((this._IDMagazzino != value))
				{
					if (this._MAGAZZINI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDMagazzinoChanging(value);
					this.SendPropertyChanging();
					this._IDMagazzino = value;
					this.SendPropertyChanged("IDMagazzino");
					this.OnIDMagazzinoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDUtensile", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDUtensile
		{
			get
			{
				return this._IDUtensile;
			}
			set
			{
				if ((this._IDUtensile != value))
				{
					this.OnIDUtensileChanging(value);
					this.SendPropertyChanging();
					this._IDUtensile = value;
					this.SendPropertyChanged("IDUtensile");
					this.OnIDUtensileChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nome", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Nome
		{
			get
			{
				return this._Nome;
			}
			set
			{
				if ((this._Nome != value))
				{
					this.OnNomeChanging(value);
					this.SendPropertyChanging();
					this._Nome = value;
					this.SendPropertyChanged("Nome");
					this.OnNomeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descrizione", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Descrizione
		{
			get
			{
				return this._Descrizione;
			}
			set
			{
				if ((this._Descrizione != value))
				{
					this.OnDescrizioneChanging(value);
					this.SendPropertyChanging();
					this._Descrizione = value;
					this.SendPropertyChanged("Descrizione");
					this.OnDescrizioneChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Quantità", DbType="Int NOT NULL")]
		public int Quantità
		{
			get
			{
				return this._Quantità;
			}
			set
			{
				if ((this._Quantità != value))
				{
					this.OnQuantitàChanging(value);
					this.SendPropertyChanging();
					this._Quantità = value;
					this.SendPropertyChanged("Quantità");
					this.OnQuantitàChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="MAGAZZINI_UTENSILI", Storage="_MAGAZZINI", ThisKey="IDStruttura,IDMagazzino", OtherKey="IDStruttura,IDMagazzino", IsForeignKey=true)]
		public MAGAZZINI MAGAZZINI
		{
			get
			{
				return this._MAGAZZINI.Entity;
			}
			set
			{
				MAGAZZINI previousValue = this._MAGAZZINI.Entity;
				if (((previousValue != value) 
							|| (this._MAGAZZINI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._MAGAZZINI.Entity = null;
						previousValue.UTENSILI.Remove(this);
					}
					this._MAGAZZINI.Entity = value;
					if ((value != null))
					{
						value.UTENSILI.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDMagazzino = value.IDMagazzino;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDMagazzino = default(int);
					}
					this.SendPropertyChanged("MAGAZZINI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VIAGGI_ISTRUZIONE")]
	public partial class VIAGGI_ISTRUZIONE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDViaggio;
		
		private System.DateTime _PrimaData;
		
		private string _Scuola;
		
		private int _NumeroPartecipanti;
		
		private string _OrdineScolastico;
		
		private int _IDGuida;
		
		private EntitySet<VISITE> _VISITE;
		
		private EntityRef<DIPENDENTI> _DIPENDENTI;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDViaggioChanging(int value);
    partial void OnIDViaggioChanged();
    partial void OnPrimaDataChanging(System.DateTime value);
    partial void OnPrimaDataChanged();
    partial void OnScuolaChanging(string value);
    partial void OnScuolaChanged();
    partial void OnNumeroPartecipantiChanging(int value);
    partial void OnNumeroPartecipantiChanged();
    partial void OnOrdineScolasticoChanging(string value);
    partial void OnOrdineScolasticoChanged();
    partial void OnIDGuidaChanging(int value);
    partial void OnIDGuidaChanged();
    #endregion
		
		public VIAGGI_ISTRUZIONE()
		{
			this._VISITE = new EntitySet<VISITE>(new Action<VISITE>(this.attach_VISITE), new Action<VISITE>(this.detach_VISITE));
			this._DIPENDENTI = default(EntityRef<DIPENDENTI>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDViaggio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDViaggio
		{
			get
			{
				return this._IDViaggio;
			}
			set
			{
				if ((this._IDViaggio != value))
				{
					this.OnIDViaggioChanging(value);
					this.SendPropertyChanging();
					this._IDViaggio = value;
					this.SendPropertyChanged("IDViaggio");
					this.OnIDViaggioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_PrimaData", DbType="DateTime NOT NULL")]
		public System.DateTime PrimaData
		{
			get
			{
				return this._PrimaData;
			}
			set
			{
				if ((this._PrimaData != value))
				{
					this.OnPrimaDataChanging(value);
					this.SendPropertyChanging();
					this._PrimaData = value;
					this.SendPropertyChanged("PrimaData");
					this.OnPrimaDataChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Scuola", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string Scuola
		{
			get
			{
				return this._Scuola;
			}
			set
			{
				if ((this._Scuola != value))
				{
					this.OnScuolaChanging(value);
					this.SendPropertyChanging();
					this._Scuola = value;
					this.SendPropertyChanged("Scuola");
					this.OnScuolaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumeroPartecipanti", DbType="Int NOT NULL")]
		public int NumeroPartecipanti
		{
			get
			{
				return this._NumeroPartecipanti;
			}
			set
			{
				if ((this._NumeroPartecipanti != value))
				{
					this.OnNumeroPartecipantiChanging(value);
					this.SendPropertyChanging();
					this._NumeroPartecipanti = value;
					this.SendPropertyChanged("NumeroPartecipanti");
					this.OnNumeroPartecipantiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_OrdineScolastico", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string OrdineScolastico
		{
			get
			{
				return this._OrdineScolastico;
			}
			set
			{
				if ((this._OrdineScolastico != value))
				{
					this.OnOrdineScolasticoChanging(value);
					this.SendPropertyChanging();
					this._OrdineScolastico = value;
					this.SendPropertyChanged("OrdineScolastico");
					this.OnOrdineScolasticoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGuida", DbType="Int NOT NULL")]
		public int IDGuida
		{
			get
			{
				return this._IDGuida;
			}
			set
			{
				if ((this._IDGuida != value))
				{
					if (this._DIPENDENTI.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDGuidaChanging(value);
					this.SendPropertyChanging();
					this._IDGuida = value;
					this.SendPropertyChanged("IDGuida");
					this.OnIDGuidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VIAGGI_ISTRUZIONE_VISITE", Storage="_VISITE", ThisKey="IDViaggio", OtherKey="IDViaggio")]
		public EntitySet<VISITE> VISITE
		{
			get
			{
				return this._VISITE;
			}
			set
			{
				this._VISITE.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="DIPENDENTI_VIAGGI_ISTRUZIONE", Storage="_DIPENDENTI", ThisKey="IDGuida", OtherKey="IDDipendente", IsForeignKey=true)]
		public DIPENDENTI DIPENDENTI
		{
			get
			{
				return this._DIPENDENTI.Entity;
			}
			set
			{
				DIPENDENTI previousValue = this._DIPENDENTI.Entity;
				if (((previousValue != value) 
							|| (this._DIPENDENTI.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._DIPENDENTI.Entity = null;
						previousValue.VIAGGI_ISTRUZIONE.Remove(this);
					}
					this._DIPENDENTI.Entity = value;
					if ((value != null))
					{
						value.VIAGGI_ISTRUZIONE.Add(this);
						this._IDGuida = value.IDDipendente;
					}
					else
					{
						this._IDGuida = default(int);
					}
					this.SendPropertyChanged("DIPENDENTI");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_VISITE(VISITE entity)
		{
			this.SendPropertyChanging();
			entity.VIAGGI_ISTRUZIONE = this;
		}
		
		private void detach_VISITE(VISITE entity)
		{
			this.SendPropertyChanging();
			entity.VIAGGI_ISTRUZIONE = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.VISITE")]
	public partial class VISITE : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDViaggio;
		
		private System.DateTime _DataOra;
		
		private int _IDStruttura;
		
		private int _IDSerra;
		
		private string _IDGuida;
		
		private EntityRef<VIAGGI_ISTRUZIONE> _VIAGGI_ISTRUZIONE;
		
		private EntityRef<SERRE> _SERRE;
		
    #region Definizioni metodo Extensibility
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDViaggioChanging(int value);
    partial void OnIDViaggioChanged();
    partial void OnDataOraChanging(System.DateTime value);
    partial void OnDataOraChanged();
    partial void OnIDStrutturaChanging(int value);
    partial void OnIDStrutturaChanged();
    partial void OnIDSerraChanging(int value);
    partial void OnIDSerraChanged();
    partial void OnIDGuidaChanging(string value);
    partial void OnIDGuidaChanged();
    #endregion
		
		public VISITE()
		{
			this._VIAGGI_ISTRUZIONE = default(EntityRef<VIAGGI_ISTRUZIONE>);
			this._SERRE = default(EntityRef<SERRE>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDViaggio", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IDViaggio
		{
			get
			{
				return this._IDViaggio;
			}
			set
			{
				if ((this._IDViaggio != value))
				{
					if (this._VIAGGI_ISTRUZIONE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDViaggioChanging(value);
					this.SendPropertyChanging();
					this._IDViaggio = value;
					this.SendPropertyChanged("IDViaggio");
					this.OnIDViaggioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_DataOra", DbType="DateTime NOT NULL", IsPrimaryKey=true)]
		public System.DateTime DataOra
		{
			get
			{
				return this._DataOra;
			}
			set
			{
				if ((this._DataOra != value))
				{
					this.OnDataOraChanging(value);
					this.SendPropertyChanging();
					this._DataOra = value;
					this.SendPropertyChanged("DataOra");
					this.OnDataOraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDStruttura", DbType="Int NOT NULL")]
		public int IDStruttura
		{
			get
			{
				return this._IDStruttura;
			}
			set
			{
				if ((this._IDStruttura != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDStrutturaChanging(value);
					this.SendPropertyChanging();
					this._IDStruttura = value;
					this.SendPropertyChanged("IDStruttura");
					this.OnIDStrutturaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDSerra", DbType="Int NOT NULL")]
		public int IDSerra
		{
			get
			{
				return this._IDSerra;
			}
			set
			{
				if ((this._IDSerra != value))
				{
					if (this._SERRE.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDSerraChanging(value);
					this.SendPropertyChanging();
					this._IDSerra = value;
					this.SendPropertyChanged("IDSerra");
					this.OnIDSerraChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDGuida", CanBeNull=false)]
		public string IDGuida
		{
			get
			{
				return this._IDGuida;
			}
			set
			{
				if ((this._IDGuida != value))
				{
					this.OnIDGuidaChanging(value);
					this.SendPropertyChanging();
					this._IDGuida = value;
					this.SendPropertyChanged("IDGuida");
					this.OnIDGuidaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="VIAGGI_ISTRUZIONE_VISITE", Storage="_VIAGGI_ISTRUZIONE", ThisKey="IDViaggio", OtherKey="IDViaggio", IsForeignKey=true)]
		public VIAGGI_ISTRUZIONE VIAGGI_ISTRUZIONE
		{
			get
			{
				return this._VIAGGI_ISTRUZIONE.Entity;
			}
			set
			{
				VIAGGI_ISTRUZIONE previousValue = this._VIAGGI_ISTRUZIONE.Entity;
				if (((previousValue != value) 
							|| (this._VIAGGI_ISTRUZIONE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._VIAGGI_ISTRUZIONE.Entity = null;
						previousValue.VISITE.Remove(this);
					}
					this._VIAGGI_ISTRUZIONE.Entity = value;
					if ((value != null))
					{
						value.VISITE.Add(this);
						this._IDViaggio = value.IDViaggio;
					}
					else
					{
						this._IDViaggio = default(int);
					}
					this.SendPropertyChanged("VIAGGI_ISTRUZIONE");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="SERRE_VISITE", Storage="_SERRE", ThisKey="IDStruttura,IDSerra", OtherKey="IDStruttura,IDSerra", IsForeignKey=true)]
		public SERRE SERRE
		{
			get
			{
				return this._SERRE.Entity;
			}
			set
			{
				SERRE previousValue = this._SERRE.Entity;
				if (((previousValue != value) 
							|| (this._SERRE.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._SERRE.Entity = null;
						previousValue.VISITE.Remove(this);
					}
					this._SERRE.Entity = value;
					if ((value != null))
					{
						value.VISITE.Add(this);
						this._IDStruttura = value.IDStruttura;
						this._IDSerra = value.IDSerra;
					}
					else
					{
						this._IDStruttura = default(int);
						this._IDSerra = default(int);
					}
					this.SendPropertyChanged("SERRE");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
